Speech Language Processing . Daniel Jurafsky & James H . Martin . Copyright c © 2019 . rights reserved . Draft October 2 , 2019 . CHAPTER 12 Constituency Grammars study grammar ancient pedigree ; Panini’s grammar Sanskrit written two thousand years ago still referenced today teaching San - skrit . Despite history , knowledge grammar remains spotty best . chapter , make preliminary stab addressing gaps knowl - edge grammar syntax , well introducing formal mechanisms available capturing knowledge computationally useful manner . word syntax comes Greek sýntaxis , meaning “ setting togethersyntax arrangement ” , refers way words arranged together . seen various syntactic notions previous chapters . regular languages introduced Chapter 2 offered simple way represent ordering strings words , Chapter 3 showed compute probabilities word sequences . Chap - ter 8 showed part-of-speech categories act kind equivalence class words . chapter next few introduce variety syntactic phe - nomena models syntax go well beyond simpler approaches . bulk chapter devoted topic context-free grammars . Context - free grammars backbone many formal models syntax natural language ( , matter , computer languages ) . , integral many computational applications , including grammar checking , semantic interpreta - tion , dialogue understanding , machine translation . powerful enough express sophisticated relations among words sentence , yet computationally tractable enough efficient algorithms exist parsing sentences ( show Chapter 13 ) . Chapter 14 , show adding probability context - free grammars gives powerful model disambiguation . Chapter 17 show provide systematic framework semantic interpretation . constituency grammars introduce , , pos - sible formal mechanism modeling syntax . Chapter 15 introduce syntactic dependencies , alternative model core representation dependency parsing . constituency dependency formalisms important language processing . addition introducing grammar formalism , chapter provides brief overview grammar English . illustrate grammars , chosen domain relatively simple sentences , Air Traffic Information System ( ATIS ) domain ( Hemphill et al . , 1990 ) . ATIS systems early example spoken language systems helping book airline reservations . Users try book flights conversing system , specifying constraints like like fly Atlanta Denver . 2 CHAPTER 12 • CONSTITUENCY GRAMMARS 12.1 Constituency fundamental notion underlying idea constituency abstraction — groups words behaving single units , constituents . significant part developing grammar involves discovering inventory constituents present language . words group together English ? Consider noun phrase , sequencenoun phrase words surrounding least noun . examples noun phrases ( thanks Damon Runyon ) : Harry Horse high-class spot Mindy’s Broadway coppers reason comes Hot Box three parties Brooklyn evidence words group together ( “ form constituents ” ) ? piece evidence appear similar syntactic environments , example , verb . three parties Brooklyn arrive . . . high-class spot Mindy’s attracts . . . Broadway coppers love . . . sit whole noun phrase occur verb , true individual words make up noun phrase . following grammat - ical sentences English ( recall asterisk ( * ) mark fragments grammatical English sentences ) : * arrive . . . * attracts . . . * . . . * spot sat . . . Thus , correctly describe facts ordering words English , able say things like “ Noun Phrases occur verbs ” . kinds evidence constituency come called preposed orpreposed postposed constructions . example , prepositional phrase September sev-postposed enteenth placed number different locations following examples , including beginning ( preposed ) end ( postposed ) : September seventeenth , like fly Atlanta Denver like fly September seventeenth Atlanta Denver like fly Atlanta Denver September seventeenth again , entire phrase placed differently , individual words making up phrase * September , like fly seventeenth Atlanta Denver * like fly September seventeenth Atlanta Denver * like fly September Atlanta Denver seventeenth 12.2 Context-Free Grammars widely formal system modeling constituent structure English natural languages Context-Free Grammar , CFG . Context-CFG 12.2 • CONTEXT-FREE GRAMMARS 3 free grammars called Phrase-Structure Grammars , formalism equivalent Backus-Naur Form , BNF . idea basing grammar constituent structure dates back psychologist Wilhelm Wundt ( 1900 ) formalized Chomsky ( 1956 ) , independently , Backus ( 1959 ) . context-free grammar consists set rules productions , whichrules expresses ways symbols language grouped ordered - gether , lexicon words symbols . example , following productionslexicon express NP ( noun phrase ) composed ProperNoun orNP determiner ( Det ) followed Nominal ; Nominal turn consist Nouns . NP → Det Nominal NP → ProperNoun Nominal → Noun | Nominal Noun Context-free rules hierarchically embedded , combine pre - vious rules others , like following , express facts lexicon : Det → Det → Noun → flight symbols CFG divided two classes . symbols correspond words language ( “ ” , “ nightclub ” ) called terminalterminal symbols ; lexicon set rules introduce terminal symbols . symbols express abstractions terminals called non-terminals . Innon-terminal context-free rule , item right arrow ( → ) ordered list terminals non-terminals ; left arrow single non-terminal symbol expressing cluster generalization . Notice lexicon , non-terminal associated word lexical category , part-of-speech , defined Chapter 8 . CFG thought two ways : device generating sentences device assigning structure sentence . Viewing CFG generator , read → arrow “ rewrite symbol left string symbols right ” . starting symbol : NP first rule rewrite NP : Det Nominal rewrite Nominal : Det Noun finally rewrite parts-of-speech : flight say string flight derived non-terminal NP . Thus , CFG generate set strings . sequence rule expansions called derivation string words . common represent derivation parsederivation tree ( commonly shown inverted root top ) . Figure 12.1 shows treeparse tree representation derivation . parse tree shown Fig . 12.1 , say node NP dominatesdominates nodes tree ( Det , Nom , Noun , , flight ) . say further immediately dominates nodes Det Nom . formal language defined CFG set strings derivable designated start symbol . grammar designated startstart symbol symbol , often called S . context-free grammars often define sentences , S usually interpreted “ sentence ” node , set strings derivable S set sentences simplified version English . 4 CHAPTER 12 • CONSTITUENCY GRAMMARS NP Nom Noun flight Det Figure 12.1 parse tree “ flight ” . add few additional rules inventory . following rule expresses fact sentence consist noun phrase followed verb phrase : verb phrase S → NP VP prefer morning flight verb phrase English consists verb followed assorted things ; example , kind verb phrase consists verb followed noun phrase : VP → Verb NP prefer morning flight verb followed noun phrase prepositional phrase : VP → Verb NP PP leave Boston morning verb phrase verb followed prepositional phrase alone : VP → Verb PP leaving Thursday prepositional phrase generally preposition followed noun phrase . example , common type prepositional phrase ATIS corpus indicate location direction : PP → Preposition NP Los Angeles NP inside PP need location ; PPs often times dates , nouns well ; arbitrarily complex . ten examples ATIS corpus : Seattle flights Minneapolis ground transportation Chicago Wednesday round trip flight United Airlines evening AP fifty seven flight ninth July stopover Nashville Figure 12.2 gives sample lexicon , Fig . 12.3 summarizes grammar rules seen far , call L0 . Note or-symbol | indicate non-terminal alternate possible expansions . grammar generate sentences “ ATIS-language ” . start S , expand NP VP , choose random expansion NP ( say , ) , random expansion VP ( say , Verb NP ) , generate string prefer morning flight . Figure 12.4 shows parse tree represents complete derivation prefer morning flight . sometimes convenient represent parse tree compact format called bracketed notation ; bracketed representation parse tree ofbracketednotation Fig . 12.4 : 12.2 • CONTEXT-FREE GRAMMARS 5 Noun → flights | breeze | trip | morning Verb → | prefer | like | need | | fly Adjective → cheapest | non-stop | first | latest | | direct Pronoun → | | | Proper-Noun → Alaska | Baltimore | Los Angeles | Chicago | United | American Determiner → | | | | | Preposition → | | | near Conjunction → | | Figure 12.2 lexicon L0 . Grammar Rules Examples S → NP VP + morning flight NP → Pronoun | Proper-Noun Los Angeles | Det Nominal + flight Nominal → Nominal Noun morning + flight | Noun flights VP → Verb | Verb NP + flight | Verb NP PP leave + Boston + morning | Verb PP leaving + Thursday PP → Preposition NP + Los Angeles Figure 12.3 grammar L0 , example phrases rule . ( 12.1 ) [ S [ NP [ Pro ] ] [ VP [ V prefer ] [ NP [ Det ] [ Nom [ N morning ] [ Nom [ N flight ] ] ] ] ] ] CFG like L0 defines formal language . saw Chapter 2 - mal language set strings . Sentences ( strings words ) derived grammar formal language defined grammar , called gram - matical sentences . Sentences derived formal grammar aregrammatical language defined grammar referred ungrammatical . ungrammatical hard line “ ” “ ” characterizes formal languages simplified model natural languages really work . de - termining sentence part natural language ( say , English ) often depends context . linguistics , formal languages model natural languages called generative grammar language defined bygenerativegrammar set possible sentences “ generated ” grammar . 12.2.1 Formal Definition Context-Free Grammar conclude section quick , formal description context-free gram - mar language generates . context-free grammar G defined four parameters : N , Σ , R , S ( technically “ 4-tuple ” ) . 6 CHAPTER 12 • CONSTITUENCY GRAMMARS S VP NP Nom Noun flight Nom Noun morning Det Verb prefer NP Pro Figure 12.4 parse tree “ prefer morning flight ” according grammar L0 . N set non-terminal symbols ( variables ) Σ set terminal symbols ( disjoint N ) R set rules productions , form → β , non-terminal , β string symbols infinite set strings ( Σ ∪ N ) ∗ S designated start symbol member N remainder book adhere following conventions dis - cussing formal properties context-free grammars ( opposed explaining particular facts English languages ) . Capital letters like , B , S Non-terminals S start symbol Lower-case Greek letters like α , β , γ Strings drawn ( Σ ∪ N ) ∗ Lower-case Roman letters like u , v , w Strings terminals language defined concept derivation . string derives - rewritten second series rule applications . formally , following Hopcroft Ullman ( 1979 ) , → β production R α γ strings set ( Σ ∪ N ) ∗ , say αAγ directly derives αβγ , αAγ ⇒ αβγ . directly derives Derivation generalization direct derivation : Let α1 , α2 , . . . , αm strings ( Σ ∪ N ) ∗ , m ≥ 1 , α1 ⇒ α2 , α2 ⇒ α3 , . . . , αm − 1 ⇒ αm say α1 derives αm , α1 ∗ ⇒ αm . derives formally define language LG generated grammar G set strings composed terminal symbols derived designated 12.3 • GRAMMAR RULES ENGLISH 7 start symbol S . LG = { w | w Σ ∗ S ∗ ⇒ w } problem mapping string words parse tree called syn - tactic parsing ; define algorithms parsing Chapter 13 . syntacticparsing 12.3 Grammar Rules English section , introduce few aspects phrase structure English ; consistency continue focus sentences ATIS domain . - cause space limitations , discussion necessarily limited highlights . Read - ers strongly advised consult good reference grammar English , Huddleston Pullum ( 2002 ) . 12.3.1 Sentence-Level Constructions small grammar L0 , provided sentence-level construction declarative sentences like prefer morning flight . Among large number constructions English sentences , four particularly common important : declaratives , imperatives , yes-no questions , wh-questions . Sentences declarative structure subject noun phrase followed bydeclarative verb phrase , like “ prefer morning flight ” . Sentences structure great number different follow up Chapter 26 . number examples ATIS domain : flight Ontario Chicago flight eleven a.m . tomorrow return flight leave around seven p.m . Sentences imperative structure often begin verb phrase haveimperative subject . called imperative almost always commands suggestions ; ATIS domain commands system . Show lowest fare Give Sunday’s flights arriving Las Vegas New York City List flights five seven p.m . model sentence structure another rule expansion S : S → VP Sentences yes-no question structure often ( though always ) toyes-no question ask questions ; begin auxiliary verb , followed subject NP , followed VP . examples . Note third example question request ; Chapter 26 discusses question forms perform different pragmatic functions asking , requesting , suggesting . flights stops ? American’s flight eighteen twenty five serve dinner ? give same information United ? Here’s rule : S → Aux NP VP 8 CHAPTER 12 • CONSTITUENCY GRAMMARS complex sentence-level structures examine various wh - structures . named constituents wh-phrase , thatwh-phrase , includes wh-word ( , whose , , , , , , why ) . wh-word broadly grouped two classes sentence-level structures . wh-subject-question structure identical declarative structure , except first noun phrase contains wh-word . airlines fly Burbank Denver ? flights depart Burbank noon arrive Denver six p.m ? Whose flights serve breakfast ? rule . Exercise 12.7 discusses rules constituents make up Wh-NP . S → Wh-NP VP wh-non-subject-question structure , wh-phrase subject thewh-non-subject-question sentence , sentence includes another subject . types sentences auxiliary appears subject NP , just yes-no question structures . example followed sample rule : flights Burbank Tacoma Washington ? S → Wh-NP Aux NP VP Constructions like wh-non-subject-question contain called long - distance dependencies Wh-NP flights far away predi-long-distancedependencies cate semantically related , main verb VP . models parsing understanding compatible grammar rule , long-distance dependencies like relation flights thought semantic relation . models , job figuring flights argument semantic interpretation . models parsing , relationship flights considered syntactic relation , grammar modified insert small marker called trace empty category verb . return empty-category models introduce Penn Treebank page 15 . 12.3.2 Clauses Sentences move , clarify status S rules grammars just described . S rules intended account entire sentences stand alone fundamental units discourse . , S occur right-hand side grammar rules hence embedded larger sentences . Clearly , there’s S just standing alone unit discourse . differentiates sentence constructions ( i.e . , S rules ) rest grammar notion sense complete . way corre - spond notion clause , traditional grammars often describe form-clause ing complete thought . way making notion “ complete thought ” precise say S node parse tree below main verb S arguments . define verbal arguments later , just illustration tree prefer morning flight Fig . 12.4 page 6 . verb prefer two arguments : subject object morning flight . arguments appears below VP node , , subject NP , appears below S node . 12.3 • GRAMMAR RULES ENGLISH 9 12.3.3 Noun Phrase L0 grammar introduced three frequent types noun phrases occur English : pronouns , proper nouns NP → Det Nominal construction . central focus section last type bulk syntactic complexity resides . noun phrases consist head , central noun noun phrase , various modifiers occur head noun . take close look various parts . Determiner Noun phrases begin simple lexical determiners , following exam - ples : stop flights flight flights flights flights role determiner English noun phrases filled complex expressions , follows : United’s flight United’s pilot’s union Denver’s mayor’s mother’s canceled flight examples , role determiner filled possessive expression consisting noun phrase followed ’ s possessive marker , following rule . Det → NP ′ s fact rule recursive ( NP start Det ) helps model last two examples , sequence possessive expressions serves determiner . circumstances determiners optional English . example , determiners omitted noun modify plural : ( 12.2 ) Show flights San Francisco Denver weekdays saw Chapter 8 , mass nouns require determination . Recall mass nouns often ( always ) involve something treated like substance ( including e.g . , water snow ) , take indefinite article “ ” , tend pluralize . Many abstract nouns mass nouns ( music , homework ) . Mass nouns ATIS domain include breakfast , lunch , dinner : ( 12.3 ) flight serve dinner ? Nominal nominal construction follows determiner contains pre - post - head noun modifiers . indicated grammar L0 , simplest form nominal consist single noun . Nominal → Noun , rule provides basis bottom various recursive rules capture complex nominal constructions . 10 CHAPTER 12 • CONSTITUENCY GRAMMARS Head Noun number different kinds word classes appear head noun ( theCardinalnumbers “ postdeterminers ” ) nominal . include cardinal numbers , ordinal num - bers , quantifiers , adjectives . Examples cardinal numbers : ordinalnumbers quantifiers two friends stop Ordinal numbers include first , second , third , , words like next , last , past , , another : first next day second leg last flight American flight quantifiers ( many , ( ) few , several ) occur plural count nouns : many fares Adjectives occur quantifiers nouns . first-class fare non-stop flight longest layover earliest lunch flight Adjectives grouped phrase called adjective phrase AP . adjectivephrase APs adverb adjective ( Chapter 8 definitions adjec - tives adverbs ) : least expensive fare Head Noun head noun followed postmodifiers . Three kinds nominal postmodi - fiers common English : prepositional phrases flights Cleveland non-finite clauses flights arriving eleven a.m . relative clauses flight serves breakfast especially common ATIS corpus mark origin destination flights . examples prepositional phrase postmodifiers , brackets inserted show boundaries PP ; note two PPs strung together single NP : flights [ Cleveland ] [ Newark ] arrival [ San Jose ] [ seven p.m . ] reservation [ flight six oh six ] [ Tampa ] [ Montreal ] Here’s new nominal rule account postnominal PPs : Nominal → Nominal PP three common kinds non-finite postmodifiers gerundive ( - non-finite ing ) , - ed , infinitive forms . Gerundive postmodifiers called consist verb phrase thatgerundive begins gerundive ( - ing ) form verb . examples : [ leaving Thursday ] flights [ arriving eleven a.m . ] flights [ arriving thirty minutes ] 12.3 • GRAMMAR RULES ENGLISH 11 define Nominals gerundive modifiers follows , making new non-terminal GerundVP : Nominal → Nominal GerundVP make rules GerundVP constituents duplicating VP pro - ductions , substituting GerundV V . GerundVP → GerundV NP | GerundV PP | GerundV | GerundV NP PP GerundV defined GerundV → | arriving | leaving | . . . phrases italics below examples two common kinds non-finite clauses , infinitives - ed forms : last flight arrive Boston need dinner served aircraft flight ? postnominal relative clause ( correctly restrictive relative clause ) , clause often begins relative pronoun ( com-relativepronoun mon ) . relative pronoun functions subject embedded verb following examples : flight serves breakfast flights leave morning leaves ten thirty five might add rules like following deal : Nominal → Nominal RelClause RelClause → ( | ) VP relative pronoun function object embedded verb , following example ; leave reader exercise writing grammar rules complex relative clauses kind . earliest American Airlines flight get Various postnominal modifiers combined , following examples show : flight [ Phoenix Detroit ] [ leaving Monday evening ] evening flights [ Nashville Houston ] [ serve dinner ] friend [ living Denver ] [ like visit DC ] Noun Phrase Word classes modify appear NPs called predeterminers . Manypredeterminers number amount ; common predeterminer : flights flights non-stop flights example noun phrase Fig . 12.5 illustrates complexity arises rules combined . 12 CHAPTER 12 • CONSTITUENCY GRAMMARS NP NP Nom GerundiveVP leaving 10 Nom PP Tampa Nom PP Denver Nom Noun flights Nom Noun morning Det PreDet Figure 12.5 parse tree “ morning flights Denver Tampa leaving 10 ” . 12.3.4 Verb Phrase verb phrase consists verb number constituents . simple rules built far , constituents include NPs PPs combinations two : VP → Verb disappear VP → Verb NP prefer morning flight VP → Verb NP PP leave Boston morning VP → Verb PP leaving Thursday Verb phrases significantly complicated . Many kinds constituents , entire embedded sentence , follow verb . called sentential complements : sententialcomplements [ VP [ V [ S two hundred sixty-six dollar fare ] ] [ VP [ V Tell ] [ NP ] [ S get airport Philadelphia down - town ] ] [ VP [ V think [ S like take nine thirty flight ] ] Here’s rule : VP → Verb S Similarly , another potential constituent VP another VP . often case verbs like , like , try , intend , need : [ VP fly Milwaukee Orlando ] Hi , [ VP arrange three flights ] 12.3 • GRAMMAR RULES ENGLISH 13 Frame Verb Example / 0 eat , sleep ate NP prefer , find , leave Find [ NP flight Pittsburgh Boston ] NP NP show , give Show [ NP ] [ NP airlines flights Pittsburgh ] PPfrom PPto fly , travel like fly [ PP Boston ] [ PP Philadelphia ] NP PPwith help , load help [ NP ] [ PP flight ] VPto prefer , , need prefer [ VPto go United Airlines ] VPbrst , , might [ VPbrst go Boston ] S mean mean [ S AA hub Boston ] Figure 12.6 Subcategorization frames set example verbs . verb phrase many possible kinds constituents , every verb compatible every verb phrase . example , verb NP complement ( flight . . . ) infinitive VP comple - ment ( fly . . . ) . contrast , verb like find take sort VP complement ( * found fly Dallas ) . idea verbs compatible different kinds complements old ; traditional grammar distinguishes transitive verbs like find , whichtransitive take direct object NP ( found flight ) , intransitive verbs like disappear , intransitive ( * disappeared flight ) . traditional grammars subcategorize verbs two categories ( tran-subcategorize sitive intransitive ) , modern grammars distinguish many 100 subcategories . say verb like find subcategorizes NP , verb like sub-Subcategorizesfor categorizes NP non-finite VP . call constituents complements verb ( hence term sentential complement ) . complements say take VP complement . possible sets complements called subcategorization frame verb . Another way talking aboutSubcategorizationframe relation verb constituents think verb logical predicate constituents logical arguments predicate . think predicate-argument relations FIND ( , FLIGHT ) ( , FLY ) . talk view verbs arguments Chapter 16 talk predicate calculus representations verb semantics . Subcategorization frames set example verbs Fig . 12.6 . capture association verbs complements making separate subtypes class Verb ( e.g . , Verb-with-NP-complement , Verb-with-Inf - VP-complement , Verb-with-S-complement , ) : Verb-with-NP-complement → find | leave | repeat | . . . Verb-with-S-complement → think | believe | say | . . . Verb-with-Inf-VP-complement → | try | need | . . . VP rule modified require appropriate verb subtype : VP → Verb-with-no-complement disappear VP → Verb-with-NP-comp NP prefer morning flight VP → Verb-with-S-comp S two flights problem approach significant increase number rules associated loss generality . 14 CHAPTER 12 • CONSTITUENCY GRAMMARS 12.3.5 Coordination major phrase types discussed conjoined conjunctions like , conjunctions , form larger constructions same type . example , coordinatecoordinate noun phrase consist two noun phrases separated conjunction : Please repeat [ NP [ NP flights ] [ NP costs ] ] need know [ NP [ NP aircraft ] [ NP flight number ] ] Here’s rule allows structures : NP → NP NP Note ability form coordinate phrases conjunctions often test constituency . Consider following examples , differ ones lack second determiner . Please repeat [ Nom [ Nom flights ] [ Nom costs ] ] need know [ Nom [ Nom aircraft ] [ Nom flight number ] ] fact phrases conjoined evidence presence underlying Nominal constituent making . Here’s rule : Nominal → Nominal Nominal following examples illustrate conjunctions involving VPs Ss . flights [ VP [ VP leaving Denver ] [ VP arriving San Francisco ] ] [ S [ S interested flight Dallas Washington ] [ S interested going Baltimore ] ] rules VP S conjunctions mirror NP . VP → VP VP S → S S major phrase types conjoined fashion , possible represent conjunction fact generally ; number grammar formalisms GPSG ( ( Gazdar et al . , 1985 ) ) metarules following : metarules X → X X metarule simply states non-terminal conjoined same non-terminal yield constituent same type . course , variable X designated variable stands non-terminal rather non - terminal itself . 12.4 Treebanks Sufficiently robust grammars consisting context-free grammar rules assign parse tree sentence . means possible build corpus every sentence collection paired corresponding parse tree . syntactically annotated corpus called treebank . Treebanks playtreebank 12.4 • TREEBANKS 15 important role parsing , discuss Chapter 13 , well linguistic investigations syntactic phenomena . wide variety treebanks created , generally parsers ( sort described next few chapters ) automatically parse sentence , followed humans ( linguists ) hand-correct parses . Penn Treebank project ( whose POS tagset introduced Chapter 8 ) pro-Penn Treebank duced treebanks Brown , Switchboard , ATIS , Wall Street Journal cor - pora English , well treebanks Arabic Chinese . number treebanks dependency representation introduce Chapter 15 , including many part Universal Dependencies project ( Nivre et al . , 2016 ) . 12.4.1 Example : Penn Treebank Project Figure 12.7 shows sentences Brown ATIS portions Penn Tree - bank . 1 Note formatting differences part-of-speech tags ; small dif - ferences common dealt processing treebanks . Penn Treebank part-of-speech tagset defined Chapter 8 . LISP-style parenthesized notation trees extremely common resembles bracketed notation saw earlier ( 12.1 ) . familiar show standard node-and-line tree representation Fig . 12.8 . ( ( S ( NP-SBJ ( DT ) ( JJ cold ) ( , , ) ( JJ empty ) ( NN sky ) ) ( VP ( VBD ) ( ADJP-PRD ( JJ full ) ( PP ( ) ( NP ( NN fire ) ( CC ) ( NN light ) ) ) ) ) ( . . ) ) ) ( ( S ( NP-SBJ / DT flight / NN ) ( VP / MD ( VP arrive / VB ( PP-TMP / ( NP eleven / CD a.m/RB ) ) ( NP-TMP tomorrow / NN ) ) ) ) ) ( ) ( b ) Figure 12.7 Parsed sentences LDC Treebank3 version Brown ( ) ATIS ( b ) corpora . Figure 12.9 shows tree Wall Street Journal . tree shows - feature Penn Treebanks : traces ( - NONE - nodes ) marktraces long-distance dependencies syntactic movement . example , quotations oftensyntacticmovement follow quotative verb like say . example , quotation “ wait collected assets ” precedes words . empty S containing node - NONE - marks position quotation sentence often occurs . empty node marked ( Treebanks II III ) index 2 , quotation S beginning sentence . co-indexing make easier parsers recover fact fronted topicalized quotation complement verb . similar - NONE - node 1 Penn Treebank project released treebanks multiple languages various stages ; ex - ample , Treebank ( Marcus et al . , 1993 ) , Treebank II ( Marcus et al . , 1994 ) , Treebank III releases English treebanks . Treebank III examples . 16 CHAPTER 12 • CONSTITUENCY GRAMMARS S . . VP ADJP-PRD PP NP NN light CC NN fire JJ full VBD NP-SBJ NN sky JJ empty , , JJ cold DT Figure 12.8 tree corresponding Brown corpus sentence previous figure . marks fact syntactic subject right verb wait ; , subject earlier NP . Again , co-indexed index 1 . ( ( S ( ‘ ‘ ‘ ‘ ) ( S-TPC-2 ( NP-SBJ-1 ( PRP ) ) ( VP ( MD ) ( VP ( VB ) ( S ( NP-SBJ ( - NONE - * - 1 ) ) ( VP ( ) ( VP ( VB wait ) ( SBAR-TMP ( ) ( S ( NP-SBJ ( PRP ) ) ( VP ( VBP ) ( VP ( VBN collected ) ( PP-CLR ( ) ( NP ( DT ) ( NNS assets ) ) ) ) ) ) ) ) ) ) ) ) ) ( , , ) ( ’ ’ ’ ’ ) ( NP-SBJ ( PRP ) ) ( VP ( VBD ) ( S ( - NONE - * T * - 2 ) ) ) ( . . ) ) ) Figure 12.9 sentence Wall Street Journal portion LDC Penn Treebank . Note empty - NONE - nodes . Penn Treebank II Treebank III releases added further information make easier recover relationships predicates arguments . Cer - 12.4 • TREEBANKS 17 Grammar Lexicon S → NP VP . PRP → | S → NP VP DT → | | S → “ S ” , NP VP . JJ → cold | empty | full S → - NONE - NN → sky | fire | light | flight | tomorrow NP → DT NN NNS → assets NP → DT NNS CC → NP → NN CC NN → | | | NP → CD RB CD → eleven NP → DT JJ , JJ NN RB → a.m . NP → PRP VB → arrive | | wait NP → - NONE - VBD → | VP → MD VP VBP → VP → VBD ADJP VBN → collected VP → VBD S MD → | VP → VBN PP → VP → VB S VP → VB SBAR VP → VBP VP VP → VBN PP VP → VP SBAR → S ADJP → JJ PP PP → NP Figure 12.10 sample CFG grammar rules lexical entries ex - tracted three treebank sentences Fig . 12.7 Fig . 12.9 . tain phrases marked tags indicating grammatical function phrase ( surface subject , logical topic , cleft , non-VP predicates ) presence particular text categories ( headlines , titles ) , semantic function ( temporal phrases , lo - cations ) ( Marcus et al . 1994 , Bies et al . 1995 ) . Figure 12.9 shows examples - SBJ ( surface subject ) - TMP ( temporal phrase ) tags . Figure 12.8 shows addi - tion - PRD tag , predicates VPs ( Fig . 12.8 ADJP ) . return topic grammatical function consider dependency grammars parsing Chapter 15 . 12.4.2 Treebanks Grammars sentences treebank implicitly constitute grammar language repre - sented corpus annotated . example , three parsed sentences Fig . 12.7 Fig . 12.9 , extract CFG rules . sim - plicity , strip off rule suffixes ( - SBJ ) . resulting grammar shown Fig . 12.10 . grammar parse Penn Treebank relatively flat , resulting many long rules . example , among approximately 4,500 different rules expanding VPs separate rules PP sequences length every possible arrangement verb arguments : VP → VBD PP VP → VBD PP PP VP → VBD PP PP PP VP → VBD PP PP PP PP VP → VB ADVP PP VP → VB PP ADVP VP → ADVP VB PP 18 CHAPTER 12 • CONSTITUENCY GRAMMARS well even longer rules , VP → VBP PP PP PP PP PP ADVP PP comes VP marked italics : mostly happens go football fall lifting winter football again spring . many thousands NP rules include NP → DT JJ NN NP → DT JJ NNS NP → DT JJ NN NN NP → DT JJ JJ NN NP → DT JJ CD NNS NP → RB DT JJ NN NN NP → RB DT JJ JJ NNS NP → DT JJ JJ NNP NNS NP → DT NNP NNP NNP NNP JJ NN NP → DT JJ NNP CC JJ JJ NN NNS NP → RB DT JJS NN NN SBAR NP → DT VBG JJ NNP NNP CC NNP NP → DT JJ NNS , NNS CC NN NNS NN NP → DT JJ JJ VBG NN NNP NNP FW NNP NP → NP JJ , JJ ‘ ‘ SBAR ’ ’ NNS last two rules , example , come following two noun phrases : [ DT ] [ JJ state-owned ] [ JJ industrial ] [ VBG holding ] [ NN company ] [ NNP Instituto ] [ NNP Nacional ] [ FW de ] [ NNP Industria ] [ NP Shearson’s ] [ JJ easy-to-film ] , [ JJ black-and-white ] “ [ SBAR Stand ] ” [ NNS commercials ] Viewed large grammar way , Penn Treebank III Wall Street Journal corpus , contains 1 million words , 1 million non-lexical rule tokens , consisting 17,500 distinct rule types . Various facts treebank grammars , large numbers flat rules , pose problems probabilistic parsing algorithms . reason , com - mon make various modifications grammar extracted treebank . discuss further Chapter 14 . 12.4.3 Heads Head Finding suggested informally earlier syntactic constituents associated lexical head ; N head NP , V head VP . idea head constituent dates back Bloomfield ( 1914 ) . central constituent-based grammar formalisms Head-Driven Phrase Structure Grammar ( Pollard Sag , 1994 ) , well dependency-based approaches grammar discuss Chapter 15 . Heads head-dependent relations come play central role computational linguistics probabilistic parsing ( Chapter 14 ) dependency parsing ( Chapter 15 ) . simple model lexical heads , context-free rule associated head ( Charniak 1997 , Collins 1999 ) . head word phrase grammatically important . Heads passed up parse tree ; thus , non-terminal parse tree annotated single word , lexical head . 12.4 • TREEBANKS 19 S ( dumped ) VP ( dumped ) PP ( ) NP ( bin ) NN ( bin ) bin DT ( ) P NP ( sacks ) NNS ( sacks ) sacks VBD ( dumped ) dumped NP ( workers ) NNS ( workers ) workers Figure 12.11 lexicalized tree Collins ( 1999 ) . Figure 12.11 shows example tree Collins ( 1999 ) , non-terminal annotated head . generation tree , CFG rule augmented identify right-side constituent head daughter . headword node set headword head daughter . Choosing head daughters simple textbook examples ( NN head NP ) complicated indeed controversial phrases . ( complementizer verb head infinite verb-phrase ? ) Modern linguistic theories syntax generally include component defines heads ( , e.g . , ( Pollard Sag , 1994 ) ) . alternative approach finding head practical computational systems . specifying head rules grammar itself , heads identified dynamically context trees specific sentences . words , once sentence parsed , resulting tree walked decorate node appropriate head . current systems rely simple set handwritten rules , practical Penn Treebank grammars Collins ( 1999 ) developed originally Magerman ( 1995 ) . example , rule finding head NP follows ( Collins , 1999 , p . 238 ) : • last word tagged POS , return last-word . • Else search right left first child NN , NNP , NNPS , NX , POS , JJR . • Else search left right first child NP . • Else search right left first child $ , ADJP , PRN . • Else search right left first child CD . • Else search right left first child JJ , JJS , RB QP . • Else return last word Selected rules set shown Fig . 12.12 . example , VP rules form VP → Y1 · · · Yn , algorithm start left Y1 · · · Yn looking first Yi type ; TOs found , search first Yi type VBD ; VBDs found , search VBN , . Collins ( 1999 ) details . 20 CHAPTER 12 • CONSTITUENCY GRAMMARS Parent Direction Priority List ADJP Left NNS QP NN $ ADVP JJ VBN VBG ADJP JJR NP JJS DT FW RBR RBS SBAR RB ADVP Right RB RBR RBS FW ADVP CD JJR JJ NP JJS NN PRN Left PRT Right RP QP Left $ NNS NN JJ RB DT CD NCD QP JJR JJS S Left VP S SBAR ADJP UCP NP SBAR Left WHNP WHPP WHADVP WHADJP DT S SQ SINV SBAR FRAG VP Left VBD VBN MD VBZ VB VBG VBP VP ADJP NN NNS NP Figure 12.12 Selected head rules Collins ( 1999 ) . set head rules often called head percola - tion table . 12.5 Grammar Equivalence Normal Form formal language defined ( possibly infinite ) set strings words . suggests ask two grammars equivalent asking gener - ate same set strings . fact , possible two distinct context-free grammars generate same language . usually distinguish two kinds grammar equivalence : weak equivalence strong equivalence . Two grammars strongly equivalent generate same set strings assign same phrase structure sentence ( allowing merely renaming non-terminal symbols ) . Two grammars weakly equivalent generate same set strings assign same phrase structure sentence . sometimes useful normal form grammars , ofnormal form productions takes particular form . example , context-free grammar Chomsky normal form ( CNF ) ( Chomsky , 1963 ) ε-free additionChomskynormal form production form → B C → . , right-hand side rule two non-terminal symbols terminal symbol . Chomsky normal form grammars binary branching , binary trees ( downbinarybranching prelexical nodes ) . make binary branching property CKY parsing algorithm Chapter 13 . context-free grammar converted weakly equivalent Chomsky normal form grammar . example , rule form → B C D converted following two CNF rules ( Exercise 12.8 asks reader formulate complete algorithm ) : → B X X → C D Sometimes binary branching actually produce smaller grammars . example , sentences might characterized VP - > VBD NP PP * represented Penn Treebank series rules : VP → VBD NP PP VP → VBD NP PP PP 12.6 • LEXICALIZED GRAMMARS 21 VP → VBD NP PP PP PP VP → VBD NP PP PP PP PP . . . generated following two-rule grammar : VP → VBD NP PP VP → VP PP generation symbol potentially infinite sequence symbols B rule form → B known Chomsky-adjunction . Chomsky-adjunction 12.6 Lexicalized Grammars approach grammar presented thus far emphasizes phrase-structure rules minimizing role lexicon . , saw discussions agreement , subcategorization , long-distance dependencies , approach leads solutions cumbersome best , yielding grammars redundant , hard manage , brittle . overcome issues , numerous alternative ap - proaches developed share common theme making bet - ter lexicon . Among computationally relevant approaches Lexical-Functional Grammar ( LFG ) ( Bresnan , 1982 ) , Head-Driven Phrase Structure Grammar ( HPSG ) ( Pollard Sag , 1994 ) , Tree-Adjoining Grammar ( TAG ) ( Joshi , 1985 ) , Combinatory Categorial Grammar ( CCG ) . approaches differ respect lexicalized — degree rely lexicon opposed phrase structure rules capture facts language . following section provides introduction CCG , heavily lexicalized approach motivated syntactic semantic considerations , return Chapter 16 . Chapter 15 discusses dependency grammars , approach eliminates phrase-structure rules entirely . 12.6.1 Combinatory Categorial Grammar section , provide overview categorial grammar ( Ajdukiewicz 1935 , categorialgrammar Bar-Hillel 1953 ) , early lexicalized grammar model , well important mod - ern extension , combinatory categorial grammar , CCG ( Steedman 1996 , Steed - combinatory categorial grammar man 1989 , Steedman 2000 ) . categorial approach consists three major elements : set categories , lexicon associates words categories , set rules govern categories combine context . Categories Categories atomic elements single-argument functions return cat - egory value provided desired category argument . formally , define C , set categories grammar follows : • ⊆ C , set atomic elements • ( X / Y ) , ( X \ Y ) ∈ C , X , Y ∈ C slash notation shown define functions grammar . specifies type expected argument , direction expected found , type result . Thus , ( X / Y ) function seeks constituent type 22 CHAPTER 12 • CONSTITUENCY GRAMMARS Y right returns value X ; ( X \ Y ) same except seeks argument left . set atomic categories typically small includes familiar el - ements sentences noun phrases . Functional categories include verb phrases complex noun phrases among others . Lexicon lexicon categorial approach consists assignments categories words . assignments atomic functional categories , due lexical ambiguity words assigned multiple categories . Consider following sample lexical entries . flight : N Miami : NP cancel : ( S \ NP ) / NP Nouns proper nouns like flight Miami assigned atomic categories , reflecting typical role arguments functions . hand , transitive verb like cancel assigned category ( S \ NP ) / NP : function seeks NP right returns value function type ( S \ NP ) . function , turn , combine NP left , yielding S result . captures kind subcategorization information discussed Section 12.3.4 , information rich , computationally useful , internal structure . Ditransitive verbs like give , expect two arguments verb , category ( ( S \ NP ) / NP ) / NP : function combines NP right yield yet another function corresponding transitive verb ( S \ NP ) / NP category cancel . Rules rules categorial grammar specify functions arguments com - bine . following two rule templates constitute basis categorial gram - mars . X / Y Y ⇒ X ( 12.4 ) Y X \ Y ⇒ X ( 12.5 ) first rule applies function argument right , second looks left argument . refer first forward function appli - cation , second backward function application . result applying rules category specified value function ap - plied . rules simple lexicon , consider analysis sentence United serves Miami . Assume serves transitive verb category ( S \ NP ) / NP United Miami simple NPs . forward backward function application , derivation proceed follows : United serves Miami NP ( S \ NP ) / NP NP > S \ NP < S 12.6 • LEXICALIZED GRAMMARS 23 Categorial grammar derivations illustrated growing down words , rule applications illustrated horizontal line spans elements - volved , type operation indicated right end line . example , two function applications : forward function application indi - cated > applies verb serves NP right , backward function application indicated < applies result first NP United left . addition another rule , categorial approach provides straight - forward way implement coordination metarule described earlier page 14 . Recall English permits coordination two constituents same type , resulting new constituent same type . following rule provides mechanism handle examples . X CONJ X ⇒ X ( 12.6 ) rule states two constituents same category separated constituent type CONJ combined single larger constituent same type . following derivation illustrates rule . flew Geneva drove Chamonix NP ( S \ NP ) / PP PP / NP NP CONJ ( S \ NP ) / PP PP / NP NP > > PP PP > > S \ NP S \ NP < Φ > S \ NP < S two S \ NP constituents combined via conjunction operator < Φ > form larger constituent same type , combined subject NP via backward function application . examples illustrate lexical nature categorial grammar approach . grammatical facts language largely encoded lexicon , rules grammar boiled down set three rules . Unfortunately , basic categorial approach give expressive power traditional CFG rules ; just moves information grammar lexicon . move beyond limitations CCG includes operations operate functions . first pair operators permit compose adjacent functions . X / Y Y / Z ⇒ X / Z ( 12.7 ) Y \ Z X \ Y ⇒ X \ Z ( 12.8 ) first rule , called forward composition , applied adjacent con-forwardcomposition stituents first function seeking argument type Y right , second function providesY result . rule allows compose two functions single type first constituent argument second . Although notation little awkward , second rule , backward composition same , except looking left ofbackwardcomposition right relevant arguments . kinds composition signalled B CCG diagrams , accompanied < > indicate direction . next operator type raising . Type raising elevates simple categories thetype raising status functions . specifically , type raising takes category converts function seeks argument function takes original category 24 CHAPTER 12 • CONSTITUENCY GRAMMARS argument . following schema show two versions type raising : arguments right , left . X ⇒ T / ( T \ X ) ( 12.9 ) X ⇒ T \ ( T / X ) ( 12.10 ) category T rules correspond atomic functional categories already present grammar . particularly useful example type raising transforms simple NP argument subject position function compose following VP . works , revisit earlier example United serves Miami . clas - sifying United NP serve argument function attached serve , type raising reinvent function own right follows . NP ⇒ S / ( S \ NP ) Combining type-raised constituent forward composition rule ( 12.7 ) permits following alternative previous derivation . United serves Miami NP ( S \ NP ) / NP NP > T S / ( S \ NP ) > B S / NP > S type raising United S / ( S \ NP ) , compose transitive verb serves yield ( S / NP ) function needed complete derivation . several interesting things note derivation . First , provides left-to-right , word-by-word derivation closely mirrors way humans process language . makes CCG particularly apt framework psy - cholinguistic studies . Second , derivation involves intermediate unit analysis , United serves , correspond traditional constituent English . ability make non-constituent elements provides CCG ability handle coordination phrases proper constituents , following example . ( 12.11 ) flew IcelandAir Geneva SwissAir London . , segments coordinated IcelandAir Geneva SwissAir London , phrases normally considered constituents , seen following standard derivation verb phrase flew IcelandAir Geneva . flew IcelandAir Geneva ( VP / PP ) / NP NP PP / NP NP > > VP / PP PP > VP derivation , single constituent corresponds IcelandAir Geneva , hence opportunity make < Φ > operator . Note complex CCG categories get little cumbersome , VP shorthand ( S \ NP ) following derivations . following alternative derivation provides required element backward type raising ( 12.10 ) backward function composition ( 12.8 ) . 12.6 • LEXICALIZED GRAMMARS 25 flew IcelandAir Geneva ( V P / PP ) / NP NP PP / NP NP < T > ( V P / PP ) \ ( ( V P / PP ) / NP ) PP < T V P \ ( V P / PP ) < B V P \ ( ( V P / PP ) / NP ) < V P Applying same analysis SwissAir London satisfies requirements < Φ > operator , yielding following derivation original example ( 12.11 ) . flew IcelandAir Geneva SwissAir London ( V P / PP ) / NP NP PP / NP NP CONJ NP PP / NP NP < T > < T > ( V P / PP ) \ ( ( V P / PP ) / NP ) PP ( V P / PP ) \ ( ( V P / PP ) / NP ) PP < T < T V P \ ( V P / PP ) V P \ ( V P / PP ) < < V P \ ( ( V P / PP ) / NP ) V P \ ( ( V P / PP ) / NP ) < Φ > V P \ ( ( V P / PP ) / NP ) < V P Finally , examine advanced operators handle long - distance dependencies ( referred syntactic movement extraction ) . mentioned Section 12.3.1 , long-distance dependencies arise many English constructions including wh-questions , relative clauses , topicalization . constructions common constituent appears somewhere dis - tant usual , expected , location . Consider following relative clause example . flight United diverted , divert transitive verb expects two NP arguments , subject NP left direct object NP right ; category ( S \ NP ) / NP . , example direct object flight “ moved ” beginning clause , subject United remains normal position . needed way incorporate subject argument , dealing fact flight expected location . following derivation accomplishes , again combined type raising function composition . flight United diverted NP / N N ( NP \ NP ) / ( S / NP ) NP ( S \ NP ) / NP > > T NP S / ( S \ NP ) > B S / NP > NP \ NP < NP saw earlier examples , first step derivation type raising United category S / ( S \ NP ) allowing combine diverted via forward composition . result composition S / NP preserves fact still looking NP fill missing direct object . second critical piece lexical category assigned word : ( NP \ NP ) / ( S / NP ) . function seeks verb phrase missing argument right , transforms NP seeking missing element left , precisely find flight . 26 CHAPTER 12 • CONSTITUENCY GRAMMARS CCGBank phrase-structure approaches , treebanks play important role CCG - based approaches parsing . CCGBank ( Hockenmaier Steedman , 2007 ) largest widely CCG treebank . created automatically trans - lating phrase-structure trees Penn Treebank via rule-based approach . method produced successful translations 99 % trees Penn Tree - bank resulting 48,934 sentences paired CCG derivations . provides lexicon 44,000 words 1200 categories . Chapter 14 discuss resources train CCG parsers . 12.7 Summary chapter introduced number fundamental concepts syntax context-free grammars . • many languages , groups consecutive words act group con - stituent , modeled context-free grammars ( known phrase-structure grammars ) . • context-free grammar consists set rules productions , expressed set non-terminal symbols set terminal symbols . Formally , particular context-free language set strings derived particular context-free grammar . • generative grammar traditional name linguistics formal lan - guage model grammar natural language . • many sentence-level grammatical constructions English ; declar - ative , imperative , yes-no question , wh-question four common types ; modeled context-free rules . • English noun phrase determiners , numbers , quantifiers , adjective phrases preceding head noun , followed num - ber postmodifiers ; gerundive VPs , infinitives VPs , past participial VPs common possibilities . • Subjects English agree main verb person number . • Verbs subcategorized types complements expect . Sim - ple subcategories transitive intransitive ; grammars include many categories . • Treebanks parsed sentences exist many genres English many languages . Treebanks searched tree-search tools . • context-free grammar converted Chomsky normal form , right-hand side rule two non-terminals single terminal . • Lexicalized grammars place emphasis structure lexicon , lessening burden pure phrase-structure rules . • Combinatorial categorial grammar ( CCG ) important computationally relevant lexicalized approach . BIBLIOGRAPHICAL HISTORICAL NOTES 27 Bibliographical Historical Notes [ origin idea phrasal constituency , cited Percival ( 1976 ) ] : . . . den sprachlichen Ausdruck für die willkürliche Gliederung einer Gesammtvorstellung ihre logische Beziehung zueinander gesetzten Bestandteile [ linguistic expression arbitrary division total idea constituent parts placed logical relations another ] W . Wundt According Percival ( 1976 ) , idea breaking up sentence hierar - chy constituents appeared Völkerpsychologie groundbreaking psy - chologist Wilhelm Wundt ( Wundt , 1900 ) . Wundt’s idea constituency taken up linguistics Leonard Bloomfield early book Introduction Study Language ( Bloomfield , 1914 ) . time later book , Language ( Bloomfield , 1933 ) , called “ immediate-constituent analysis ” well-established method syntactic study United States . contrast , tra - ditional European grammar , dating Classical period , defined relations - tween words rather constituents , European syntacticians retained em - phasis dependency grammars , subject Chapter 15 . American Structuralism saw number specific definitions immediate constituent , couched terms search “ discovery procedure ” : method - ological algorithm describing syntax language . general , attempt capture intuition “ primary criterion immediate constituent degree combinations behave simple units ” ( Bazell , 1966 , p . 284 ) . well known specific definitions Harris ’ idea distributional similarity individual units , substitutability test . Essentially , method proceeded breaking up construction constituents attempting substitute simple structures possible constituents — substitution simple form , say , man , substitutable construction complex set ( like intense young man ) , form intense young man probably constituent . Harris’s test beginning intuition constituent kind equivalence class . first formalization idea hierarchical constituency phrase - structure grammar defined Chomsky ( 1956 ) further expanded upon ( argued against ) Chomsky ( 1957 ) Chomsky ( 1975 ) . time , generative linguistic theories based least part context-free grammars generalizations ( Head-Driven Phrase Structure Grammar ( Pollard Sag , 1994 ) , Lexical-Functional Grammar ( Bresnan , 1982 ) , Government Binding ( Chomsky , 1981 ) , Construction Grammar ( Kay Fillmore , 1999 ) , inter alia ) ; many theories schematic context-free templates known X-bar schemata , relied notion syntactic head . X-barschemata Shortly Chomsky’s initial work , context-free grammar reinvented Backus ( 1959 ) independently Naur et al . ( 1960 ) descriptions ALGOL programming language ; Backus ( 1996 ) noted influenced productions Emil Post Naur’s work independent ( Backus ’ ) own . ( Recall discussion page ? ? multiple invention science . ) early work , great number computational models natural language processing based context-free grammars early development efficient algorithms parse grammars ( Chapter 13 ) . 28 CHAPTER 12 • CONSTITUENCY GRAMMARS already noted , grammars based context-free rules ubiqui - tous . Various classes extensions CFGs designed specifically handle long - distance dependencies . noted earlier grammars treat long-distance - dependent items related semantically syntactically ; surface syn - tax represent long-distance link ( Kay Fillmore 1999 , Culicover Jackendoff 2005 ) . alternatives . extended formalism Tree Adjoining Grammar ( TAG ) ( Joshi , 1985 ) . primary TAG data structure tree , rather rule . Trees come two kinds : initial trees auxiliary trees . Initial trees might , example , represent simple sentential structures , auxiliary trees add recursion tree . Trees combined two operations called substitution adjunction . adjunction operation handles long-distance dependencies . Joshi ( 1985 ) details . extension Tree Adjoining Grammar , called Lexicalized Tree Adjoining Gram - mars discussed Chapter 14 . Tree Adjoining Grammar member family mildly context-sensitive languages . mentioned page 15 another way handling long-distance dependencies , based empty categories co-indexing . Penn Treebank model , draws ( various Treebank corpora ) Extended Standard Theory Minimalism ( Radford , 1997 ) . Readers interested grammar English get three large reference grammars English : Huddleston Pullum ( 2002 ) , Biber et al . ( 1999 ) , Quirk et al . ( 1985 ) . Another useful reference McCawley ( 1998 ) . many good introductory textbooks syntax different perspec - tives . Sag et al . ( 2003 ) introduction syntax generative perspective , generative focusing phrase-structure rules , unification , type hierarchy Head-Driven Phrase Structure Grammar . Van Valin , Jr . La Polla ( 1997 ) introduction functional perspective , focusing cross-linguistic data onfunctional functional motivation syntactic structures . Exercises 12.1 Draw tree structures following ATIS phrases : 1 . Dallas 2 . Denver 3 . five p.m . 4 . arriving Washington 5 . early flights 6 . redeye flights 7 . Thursday 8 . one-way fare 9 . delays Denver 12.2 Draw tree structures following ATIS sentences : 1 . American Airlines flight five a.m . six a.m . ? 2 . like fly American Airlines . 3 . Please repeat . 4 . American 487 first-class section ? 5 . need fly Philadelphia Atlanta . 6 . fare Atlanta Denver ? EXERCISES 29 7 . American Airlines flight Philadelphia Dallas ? 12.3 Assume grammar many VP rules different subcategorizations , expressed Section 12.3.4 , differently subcategorized verb rules like Verb-with-NP-complement . rule postnominal relative clauses ( 12.4 ) need modified wanted deal properly examples like earliest flight ? Recall examples pronoun object verb get . rules allow noun phrase correctly rule ungrammatical S * get . 12.4 solution previous problem correctly model NP earliest flight get ? earliest flight think mother wants book ? Hint : phenomenon called long-distance dependency . 12.5 Write rules expressing verbal subcategory English auxiliaries ; ex - ample , might rule verb-with-bare-stem-VP-complement → . 12.6 NPs like Fortune’s office uncle’s marks called possessive genitivepossessive genitive noun phrases . model possessive noun phrases treating sub-NP like Fortune’s uncle’s determiner following head noun . Write grammar rules English possessives . treat ’ s separate word ( i.e . , always space ’ s ) . 12.7 Page 8 discussed need Wh-NP constituent . simplest Wh-NP Wh-pronouns ( , whom , whose , ) . Wh-words determiners : four ? , credit Duke ? Write rules different types Wh-NPs . 12.8 Write algorithm converting arbitrary context-free grammar Chom - sky normal form . 30 Chapter 12 • Constituency Grammars Ajdukiewicz , K . ( 1935 ) . Die syntaktische Konnexität . Stu - dia Philosophica , 1 , 1 – 27 . English translation “ Syntactic Connexion ” H . Weber McCall , S . ( Ed . ) 1967 . Polish Logic , pp . 207 – 231 , Oxford University Press . Backus , J . W . ( 1959 ) . syntax semantics pro - posed international algebraic language Zurich ACM - GAMM Conference . Information Processing : Proceed - ings International Conference Information Pro - cessing , Paris , 125 – 132 . UNESCO . Backus , J . W . ( 1996 ) . Transcript question answer ses - sion . Wexelblat , R . L . ( Ed . ) , History Programming Languages , p . 162 . Academic Press . Bar-Hillel , Y . ( 1953 ) . quasi-arithmetical notation syn - tactic description . Language , 29 , 47 – 58 . Bazell , C . E . ( 1952/1966 ) . correspondence fallacy structural linguistics . Hamp , E . P . , Householder , F . W . , Austerlitz , R . ( Eds . ) , Studies Members En - glish Department , Istanbul University ( 3 ) , reprinted Readings Linguistics II ( 1966 ) , 271 – 298 . University Chicago Press . Biber , D . , Johansson , S . , Leech , G . , Conrad , S . , Fine - gan , E . ( 1999 ) . Longman Grammar Spoken Written English . Pearson . Bies , . , Ferguson , M . , Katz , K . , MacIntyre , R . ( 1995 ) . Bracketing guidelines Treebank II style Penn Treebank Project . . Bloomfield , L . ( 1914 ) . Introduction Study Lan - guage . Henry Holt Company . Bloomfield , L . ( 1933 ) . Language . University Chicago Press . Bresnan , J . ( Ed . ) . ( 1982 ) . Mental Representation Grammatical Relations . MIT Press . Charniak , E . ( 1997 ) . Statistical parsing context-free grammar word statistics . AAAI-97 , 598 – 603 . Chomsky , N . ( 1956 ) . Three models description language . IRE Transactions Information Theory , 2 ( 3 ) , 113 – 124 . Chomsky , N . ( 1956/1975 ) . Logical Structure Linguis - tic Theory . Plenum . Chomsky , N . ( 1957 ) . Syntactic Structures . Mouton , Hague . Chomsky , N . ( 1963 ) . Formal properties grammars . Luce , R . D . , Bush , R . , Galanter , E . ( Eds . ) , Handbook Mathematical Psychology , Vol . 2 , 323 – 418 . Wiley . Chomsky , N . ( 1981 ) . Lectures Government Binding . Foris . Collins , M . ( 1999 ) . Head-Driven Statistical Models Nat - ural Language Parsing . Ph . D . thesis , University Penn - sylvania , Philadelphia . Culicover , P . W . Jackendoff , R . ( 2005 ) . Simpler Syntax . Oxford University Press . Gazdar , G . , Klein , E . , Pullum , G . K . , Sag , . . ( 1985 ) . Generalized Phrase Structure Grammar . Blackwell . Harris , Z . S . ( 1946 ) . morpheme utterance . Lan - guage , 22 ( 3 ) , 161 – 183 . Hemphill , C . T . , Godfrey , J . , Doddington , G . ( 1990 ) . ATIS spoken language systems pilot corpus . Pro - ceedings DARPA Speech Natural Language Workshop , 96 – 101 . Hockenmaier , J . Steedman , M . ( 2007 ) . Ccgbank : cor - pus ccg derivations dependency structures extracted penn treebank . Computational Linguistics , 33 ( 3 ) , 355 – 396 . Hopcroft , J . E . Ullman , J . D . ( 1979 ) . Introduction Automata Theory , Languages , Computation . Addison - Wesley . Huddleston , R . Pullum , G . K . ( 2002 ) . Cambridge Grammar English Language . Cambridge University Press . Joshi , . K . ( 1985 ) . Tree adjoining grammars : context-sensitivity required provide reasonable struc - tural descriptions ? . Dowty , D . R . , Karttunen , L . , Zwicky , . ( Eds . ) , Natural Language Parsing , 206 – 250 . Cambridge University Press . Kay , P . Fillmore , C . J . ( 1999 ) . Grammatical construc - tions linguistic generalizations : X Y ? construction . Language , 75 ( 1 ) , 1 – 33 . Magerman , D . M . ( 1995 ) . Statistical decision-tree models parsing . ACL-95 , 276 – 283 . Marcus , M . P . , Kim , G . , Marcinkiewicz , M . . , MacIntyre , R . , Bies , . , Ferguson , M . , Katz , K . , Schasberger , B . ( 1994 ) . Penn Treebank : Annotating predicate argu - ment structure . ARPA Human Language Technology Workshop , 114 – 119 . Morgan Kaufmann . Marcus , M . P . , Santorini , B . , Marcinkiewicz , M . . ( 1993 ) . Building large annotated corpus English : Penn treebank . Computational Linguistics , 19 ( 2 ) , 313 – 330 . McCawley , J . D . ( 1998 ) . Syntactic Phenomena En - glish . University Chicago Press . Naur , P . , Backus , J . W . , Bauer , F . L . , Green , J . , Katz , C . , McCarthy , J . , Perlis , . J . , Rutishauser , H . , Samelson , K . , Vauquois , B . , Wegstein , J . H . , van Wijnagaarden , . , Woodger , M . ( 1960 ) . Report algorithmic language ALGOL 60 . CACM , 3 ( 5 ) , 299 – 314 . Revised CACM 6:1 , 1-17 , 1963 . Nivre , J . , de Marneffe , M . - C . , Ginter , F . , Goldberg , Y . , Hajič , J . , Manning , C . D . , McDonald , R . , Petrov , S . , Pyysalo , S . , Silveira , N . , Tsarfaty , R . , Zeman , D . ( 2016 ) . Universal Dependencies v1 : multilingual treebank collection . LREC-16 . Percival , W . K . ( 1976 ) . historical source immedi - ate constituent analysis . McCawley , J . D . ( Ed . ) , Syntax Semantics Volume 7 , Notes Linguistic - ground , 229 – 242 . Academic Press . Pollard , C . Sag , . . ( 1994 ) . Head-Driven Phrase Struc - ture Grammar . University Chicago Press . Quirk , R . , Greenbaum , S . , Leech , G . , Svartvik , J . ( 1985 ) . Comprehensive Grammar English Lan - guage . Longman . Radford , . ( 1997 ) . Syntactic Theory Structure English : Minimalist Approach . Cambridge University Press . Sag , . . , Wasow , T . , Bender , E . M . ( Eds . ) . ( 2003 ) . Syn - tactic Theory : Formal Introduction . CSLI Publications , Stanford , CA . Steedman , M . ( 1989 ) . Constituency coordination combinatory grammar . Baltin , M . R . Kroch , . S . ( Eds . ) , Alternative Conceptions Phrase Structure , 201 – 231 . University Chicago . Exercises 31 Steedman , M . ( 1996 ) . Surface Structure Interpretation . MIT Press . Linguistic Inquiry Monograph , 30 . Steedman , M . ( 2000 ) . Syntactic Process . MIT Press . Van Valin , Jr . , R . D . La Polla , R . ( 1997 ) . Syntax : Struc - ture , Meaning , Function . Cambridge University Press . Wundt , W . ( 1900 ) . Völkerpsychologie : eine Untersuchung der Entwicklungsgesetze von Sprache , Mythus , und Sitte . W . Engelmann , Leipzig . Band II : Die Sprache , Zweiter Teil .