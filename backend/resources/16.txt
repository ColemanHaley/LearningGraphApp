Speech Language Processing . Daniel Jurafsky & James H . Martin . Copyright c © 2019 . rights reserved . Draft October 2 , 2019 . CHAPTER 16 Logical Representations ofSentence Meaning ISHMAEL : Surely meaning . Herman Melville , Moby Dick chapter introduce idea meaning linguistic expressions captured formal structures called meaning representations . Consider tasksmeaningrepresentations require form semantic processing , like learning new piece software reading manual , deciding order restaurant reading menu , following recipe . Accomplishing tasks requires representations link linguistic elements necessary non-linguistic knowledge world . Reading menu deciding order , giving advice go dinner , following recipe , generating new recipes require knowledge food preparation , people like eat , restaurants like . Learning piece software reading manual , giving advice software , requires knowledge software similar apps , computers , users general . chapter , assume linguistic expressions meaning representa - tions made up same kind stuff represent kind everyday common-sense knowledge world . process whereby repre - sentations created assigned linguistic inputs called semantic parsing orsemanticparsing semantic analysis , entire enterprise designing meaning representations associated semantic parsers referred computational semantics . computationalsemantics ∃ e , y ( e ) ∧ Haver ( e , Speaker ) ∧ HadT hing ( e , y ) ∧ Car ( y ) h / have-01 c / cari / arg0 arg1 ( h / have-01 arg0 : ( / ) arg1 : ( c / car ) ) : Haver : Speaker HadThing : Car Figure 16.1 list symbols , two directed graphs , record structure : sampler meaning representations car . Consider Fig . 16.1 , shows example meaning representations sen - tence car four commonly meaning representation languages . top row illustrates sentence First-Order Logic , covered detail Sec - tion 16.3 ; directed graph corresponding textual form example Abstract Meaning Representation ( AMR ) form ( Banarescu et al . , 2013 ) , right frame-based slot-filler representation , discussed Section 16.5 again Chapter 18 . 2 CHAPTER 16 • LOGICAL REPRESENTATIONS SENTENCE MEANING non-trivial differences among approaches , share notion meaning representation consists structures composed set symbols , representational vocabulary . appropriately arranged , symbol structures taken correspond objects , properties objects , rela - tions among objects state affairs represented reasoned . case , four representations make symbols corresponding speaker , car , relation denoting possession . Importantly , representations viewed least two distinct per - spectives approaches : representations meaning par - ticular linguistic input car , representations state affairs world . dual perspective allows representations link linguistic inputs world knowledge . next sections give background : desiderata meaning representation language guarantees representations actually need — provide correspondence state affairs represented . Section 16.3 introduce First-Order Logic , historically primary technique investigating natural language semantics , Section 16.4 capture semantics events states English . Chapter 17 introduces techniques semantic parsing : generating formal meaning representations linguistic inputs . 16.1 Computational Desiderata Representations consider why meaning representations needed . focus discussion , consider system gives restaurant advice tourists based knowledge base . Verifiability Consider following simple question : ( 16.1 ) Maharani serve vegetarian food ? answer question , know asking , know asking true Maharini . verifiability system’s ability compareverifiability state affairs described representation state affairs world modeled knowledge base . example need sort representation like Serves ( Maharani , VegetarianFood ) , system match against knowledge base facts particular restaurants , find representation matching proposition , answer yes . Otherwise , say knowledge local restaurants complete , say know knows knowledge incomplete . Unambiguous Representations Semantics , like domains studied , subject ambiguity . Words sentences different meaning representations different contexts . Consider following example : ( 16.2 ) wanna eat someplace that’s close ICSI . sentence mean speaker wants eat nearby location , Godzilla-as-speaker interpretation , speaker devour 16.1 • COMPUTATIONAL DESIDERATA REPRESENTATIONS 3 nearby location . sentence ambiguous ; single linguistic expression two meanings . meaning representations itself ambiguous . representation input’s meaning free ambiguity , system reason representation means thing order decide answer . concept closely related ambiguity vagueness : meaning repre-vagueness sentation leaves parts meaning underspecified . Vagueness give rise multiple representations . Consider following request : ( 16.3 ) eat Italian food . Italian food provide enough information provide recommendations , nevertheless vague user really wants eat . vague representation meaning phrase appropriate purposes , specific representation needed purposes . Canonical Form doctrine canonical form distinct inputs mean same thingcanonical form same meaning representation . approach greatly simplifies rea - soning , systems need deal single meaning representation potentially wide range expressions . Consider following alternative ways expressing ( 16.1 ) : ( 16.4 ) Maharani vegetarian dishes ? ( 16.5 ) vegetarian food Maharani ? ( 16.6 ) vegetarian dishes served Maharani ? ( 16.7 ) Maharani serve vegetarian fare ? Despite fact alternatives different words syntax , map single canonical meaning representations . different , assuming system’s knowledge base contains single representation fact , representations match . , course , store possible alternative representations same fact knowledge base , lead enormous difficult keeping knowledge base consistent . Canonical form complicate task semantic parsing . system conclude vegetarian fare , vegetarian dishes , vegetarian food refer same thing , serving equivalent , parse structures still lead same meaning representation . consider pair examples : ( 16.8 ) Maharani serves vegetarian dishes . ( 16.9 ) Vegetarian dishes served Maharani . Despite different placement arguments serve , system still assign Maharani vegetarian dishes same roles two examples draw - ing grammatical knowledge , relationship active passive sentence constructions . Inference Variables complex requests : ( 16.10 ) vegetarians eat Maharani ? request results same answer others mean same thing , common-sense connection vegetarians eat 4 CHAPTER 16 • LOGICAL REPRESENTATIONS SENTENCE MEANING vegetarian restaurants serve . fact world . need connect meaning representation request fact world knowledge base . system able inference — draw valid conclusionsinference based meaning representation inputs background knowledge . possible system draw conclusions truth propositions explicitly represented knowledge base nevertheless logically derivable propositions present . consider following somewhat complex request : ( 16.11 ) like find restaurant get vegetarian food . request make reference particular restaurant ; user wants - formation unknown restaurant serves vegetarian food . restau - rants named , simple matching going work . Answering request requires variables , representation like following : variables Serves ( x , VegetarianFood ) ( 16.12 ) Matching succeeds variable x replaced object knowledge base way entire proposition match . con - cept substituted variable fulfill user’s request . critical meaning representation language able handle kinds indefinite references . Expressiveness Finally , meaning representation scheme expressive enough handle wide range subject matter , ideally sensible natural language utterance . Al - though probably expect single representational system , First-Order Logic , described Section 16.3 , expressive enough handle quite lot needs represented . 16.2 Model-Theoretic Semantics meaning representation languages allows fulfill desiderata , bridging gap formal representations representations tell something state affairs world ? answer model . model formal construct stands partic-model ular state affairs world . Expressions meaning representation language mapped elements model , like objects , properties objects , relations among objects . model accurately captures facts interested , consistent mapping meaning representation model provides bridge meaning representation world . Models provide surprisingly simple powerful way ground expressions meaning repre - sentation languages . First , terminology . vocabulary meaning representation consists two parts : non-logical vocabulary logical vocabulary . non-logical vocabulary consists open-ended set names objects , properties , andnon-logicalvocabulary relations make up world trying represent . appear various schemes predicates , nodes , labels links , labels slots frames , log - ical vocabulary consists closed set symbols , operators , quantifiers , links , logicalvocabulary 16.2 • MODEL-THEORETIC SEMANTICS 5 etc . , provide formal means composing expressions meaning representation language . element non-logical vocabulary denotation model , denotation meaning every element corresponds fixed , well-defined part model . start objects . domain model set objects beingdomain represented . distinct concept , category , individual denotes unique element domain . represent properties objects model denoting domain elements property ; , properties denote sets . denotation property red set things think red . Similarly , relations among object denote set ordered lists , tuples , domain elements take part relations : denotation relation Married set pairs domain objects married . approach properties relations called extensional , defineextensional concepts extension , denotations . summarize : • Objects denote elements domain • Properties denote sets elements domain • Relations denote sets tuples elements domain need mapping gets meaning representation corresponding denotations : function maps non-logical vocabulary meaning representation proper denotations model . call mapping interpretation . interpretation return restaurant advice application , let domain consist sets restaurants , patrons , facts likes dislikes patrons , facts restaurants cuisine , typical cost , noise level . begin populating domain , D , assume dealing four patrons designated non-logical symbols Matthew , Franco , Katie , Caroline . de - noting four unique domain elements . constants , b , c , d stand domain elements . deliberately meaningless , non-mnemonic names domain elements emphasize fact whatever know entities come formal properties model names symbols . Continuing , assume application includes three restaurants , designated Frasca , Med , Rio meaning rep - resentation , denote domain elements e , f , g . Finally , assume dealing three cuisines Italian , Mexican , Eclectic , denoted h , , j model . Properties like Noisy denote subset restaurants domain known noisy . Two-place relational notions , restaurants individ - ual patrons Like , denote ordered pairs , tuples , objects domain . , decided represent cuisines objects model , cap - ture restaurants Serve cuisines set tuples . possible state affairs scheme Fig . 16.2 . simple scheme , ground meaning representations con - sulting appropriate denotations corresponding model . example , evaluate representation claiming Matthew likes Rio , Med serves Italian mapping objects meaning representations corresponding domain elements mapping links , predicates , slots meaning repre - sentation appropriate relations model . concretely , verify representation asserting Matthew likes Frasca first interpretation function map symbol Matthew denotation , Frasca e , Likes relation appropriate set tuples . check set tuples 6 CHAPTER 16 • LOGICAL REPRESENTATIONS SENTENCE MEANING Domain D = { , b , c , d , e , f , g , h , , j } Matthew , Franco , Katie Caroline , b , c , d Frasca , Med , Rio e , f , g Italian , Mexican , Eclectic h , , j Properties Noisy Noisy = { e , f , g } Frasca , Med , Rio noisy Relations Likes Likes = { 〈 , f 〉 , 〈 c , f 〉 , 〈 c , g 〉 , 〈 b , e 〉 , 〈 d , f 〉 , 〈 d , g 〉 } Matthew likes Med Katie likes Med Rio Franco likes Frasca Caroline likes Med Rio Serves Serves = { 〈 f , j 〉 , 〈 g , 〉 , 〈 e , h 〉 } Med serves eclectic Rio serves Mexican Frasca serves Italian Figure 16.2 model restaurant world . presence tuple 〈 , e 〉 . , case , tuple present model , conclude Matthew likes Frasca true ; . pretty straightforward — sets operations sets ground expressions meaning representations . course , inter - esting part comes consider complex examples following : ( 16.13 ) Katie likes Rio Matthew likes Med . ( 16.14 ) Katie Caroline like same restaurants . ( 16.15 ) Franco likes noisy , expensive restaurants . ( 16.16 ) everybody likes Frasca . simple scheme grounding meaning representations adequate examples . Plausible meaning representations examples map directly individual entities , properties , relations . , involve complications conjunctions , equality , quantified variables , nega - tions . assess statements consistent model , tear apart , assess parts , determine meaning whole meaning parts . Consider first example . meaning representation example include two distinct propositions expressing individual patron’s preferences , conjoined kind implicit explicit conjunction operator . model relation encodes pairwise preferences patrons restaurants model , nor need . know model Matthew likes Med separately Katie likes Rio ( , tuples 〈 , f 〉 〈 c , g 〉 members set denoted Likes relation ) . really need know deal semantics conjunction operator . assume simplest possible semantics English word , whole statement true case components true model . case , components true appropriate tuples present sentence whole true . example provide truth-conditional semantics truth - conditional semantics 16.3 • FIRST-ORDER LOGIC 7 Formula → AtomicFormula | Formula Connective Formula | Quantifier Variable , . . . Formula | ¬ Formula | ( Formula ) AtomicFormula → Predicate ( Term , . . . ) Term → Function ( Term , . . . ) | Constant | Variable Connective → ∧ | ∨ | = ⇒ Quantifier → ∀ | ∃ Constant → | VegetarianFood | Maharani · · · Variable → x | y | · · · Predicate → Serves | Near | · · · Function → LocationOf | CuisineOf | · · · Figure 16.3 context-free grammar specification syntax First-Order Logic rep - resentations . Adapted Russell Norvig ( 2002 ) . assumed conjunction operator meaning representation . , provided method determining truth complex expression meanings parts ( consulting model ) meaning operator consulting truth table . Meaning representation languages truth-conditional extent give formal specification determine mean - ing complex sentences meaning parts . particular , need know semantics entire logical vocabulary meaning representation scheme . Note although details happens depend details par - ticular meaning representation , clear assessing truth conditions examples like involves nothing beyond simple set operations discussing . return issues next section context semantics First-Order Logic . 16.3 First-Order Logic First-Order Logic ( FOL ) flexible , well-understood , computationally tractable meaning representation language satisfies many desiderata Sec - tion 16.1 . provides sound computational basis verifiability , inference , expressiveness requirements , well sound model-theoretic semantics . additional attractive feature FOL makes few specific commitments things ought represented , shared many schemes mentioned earlier : represented world consists objects , properties objects , relations among objects . remainder section introduces basic syntax semantics FOL describes application FOL representation events . 16.3.1 Basic Elements First-Order Logic explore FOL first examining various atomic elements showing composed create larger meaning representations . Figure 16.3 , 8 CHAPTER 16 • LOGICAL REPRESENTATIONS SENTENCE MEANING provides complete context-free grammar particular syntax FOL , roadmap section . begin examining notion term , FOL device representingterm objects . seen Fig . 16.3 , FOL provides three ways represent basic building blocks : constants , functions , variables . devices thought designating object world consideration . Constants FOL refer specific objects world described . Suchconstant constants conventionally depicted single capitalized letters B single capitalized words often reminiscent proper nouns Maharani Harry . Like programming language constants , FOL constants refer exactly object . Objects , , multiple constants refer . Functions FOL correspond concepts often expressed English asfunction genitives Frasca’s location . FOL translation expression might look like following . LocationOf ( Frasca ) ( 16.17 ) FOL functions syntactically same single argument predicates . - portant remember , , appearance predicates , fact terms refer unique objects . Functions provide con - venient way refer specific objects associate named constant . particularly convenient cases many named objects , like restaurants , unique concept location associated . Variables final FOL mechanism referring objects . Variables , de-variable picted single lower-case letters , let make assertions draw inferences objects make reference particular named object . ability make statements anonymous objects comes two flavors : making state - ments particular unknown object making statements objects arbitrary world objects . return topic variables presented quantifiers , elements FOL make variables useful . means refer objects , move FOL mechanisms state relations hold among objects . Predicates symbols refer , name , relations hold among fixed number objects domain . Returning example introduced informally Section 16.1 , reasonable FOL representation Maharani serves vegetarian food might look like following formula : Serves ( Maharani , VegetarianFood ) ( 16.18 ) FOL sentence asserts Serves , two-place predicate , holds objects denoted constants Maharani VegetarianFood . somewhat different predicates illustrated following fairly typ - ical representation sentence like Maharani restaurant : Restaurant ( Maharani ) ( 16.19 ) example one-place predicate , relate multiple objects , rather assert property single object . case , encodes category membership Maharani . ability refer objects , assert facts objects , relate objects another , create rudimentary composite representations . representations correspond atomic formula level Fig . 16.3 . ability 16.3 • FIRST-ORDER LOGIC 9 compose complex representations , , limited single predicates . Larger composite representations put together logical connectives . seen Fig . 16.3 , logical connectives letlogicalconnectives create larger representations conjoining logical formulas three operators . Consider , example , following BERP sentence possible representation : ( 16.20 ) five dollars lot time . ( Speaker , FiveDollars ) ∧ ¬ ( Speaker , LotOfTime ) ( 16.21 ) semantic representation example built up straightforward way semantics individual clauses ∧ ¬ operators . Note recursive nature grammar Fig . 16.3 allows infinite number logical formulas created connectives . Thus , syntax , finite device create infinite number representations . 16.3.2 Variables Quantifiers machinery necessary return earlier discussion vari - ables . noted , variables two ways FOL : refer particular anonymous objects refer generically objects collection . two made possible operators known quantifiers . twoquantifiers operators basic FOL existential quantifier , denoted ∃ pronounced “ exists ” , universal quantifier , denoted ∀ pronounced “ ” . need existentially quantified variable often signaled presence indefinite noun phrase English . Consider following example : ( 16.22 ) restaurant serves Mexican food near ICSI . , reference made anonymous object specified category particular properties . following reasonable representation meaning phrase : ∃ xRestaurant ( x ) ∧ Serves ( x , MexicanFood ) ( 16.23 ) ∧ Near ( ( LocationOf ( x ) , LocationOf ( ICSI ) ) existential quantifier head sentence instructs interpret variable x context sentence . Informally , sentence true least object substitute variable x , resulting sentence true . example , AyCaramba Mexican restaurant near ICSI , substituting AyCaramba x results following logical formula : Restaurant ( AyCaramba ) ∧ Serves ( AyCaramba , MexicanFood ) ( 16.24 ) ∧ Near ( ( LocationOf ( AyCaramba ) , LocationOf ( ICSI ) ) Based semantics ∧ operator , sentence true three component atomic formulas true . turn true present system’s knowledge base inferred facts knowledge base . universal quantifier interpretation based substi - tution known objects variables . substitution semantics universal 10 CHAPTER 16 • LOGICAL REPRESENTATIONS SENTENCE MEANING quantifier takes expression quite literally ; ∀ operator states logical formula question true , substitution object knowledge base universally quantified variable result true formula . marked contrast ∃ operator , insists single valid substitution sentence true . Consider following example : ( 16.25 ) vegetarian restaurants serve vegetarian food . reasonable representation sentence something like following : ∀ xVegetarianRestaurant ( x ) = ⇒ Serves ( x , VegetarianFood ) ( 16.26 ) sentence true , every substitution known object x result sentence true . divide set possible substitutions set objects consisting vegetarian restaurants set consisting everything else . Let first consider case substituted object actually vegetarian restaurant ; substitution result following sentence : VegetarianRestaurant ( Maharani ) = ⇒ Serves ( Maharani , VegetarianFood ) ( 16.27 ) assume know consequent clause Serves ( Maharani , VegetarianFood ) ( 16.28 ) true , sentence whole true . antecedent consequent value True , , according first two rows Fig . 16.4 page 12 sentence itself value True . result same possible substitutions Terms representing vegetarian restaurants x . Remember , , sentence true , true possible substitutions . happens consider substitution set objects vegetarian restaurants ? Consider substitution non - vegetarian restaurant AyCaramba variable x : VegetarianRestaurant ( AyCaramba ) = ⇒ Serves ( AyCaramba , VegetarianFood ) antecedent implication False , determine Fig . 16.4 sentence always True , again satisfying ∀ constraint . Note still case AyCaramba serves vegetarian food - actually vegetarian restaurant . Note , despite choice examples , implied categorical restrictions objects substituted x kind reasoning . words , restriction x restaurants concepts related . Consider following substitution : VegetarianRestaurant ( Carburetor ) = ⇒ Serves ( Carburetor , VegetarianFood ) antecedent still false rule remains true kind irrelevant substitution . review , variables logical formulas existentially ( ∃ ) uni - versally ( ∀ ) quantified . satisfy existentially quantified variable , least substitution result true sentence . satisfy universally quantified vari - able , substitutions result true sentences . 16.3 • FIRST-ORDER LOGIC 11 16.3.3 Lambda Notation final element need complete discussion FOL called lambda notation ( Church , 1940 ) . notation provides way abstract fully speci-lambdanotation fied FOL formulas way particularly useful semantic analysis . lambda notation extends syntax FOL include expressions following form : λx . P ( x ) ( 16.29 ) expressions consist Greek symbol λ , followed variables , followed FOL formula makes variables . usefulness λ - expressions based ability apply logical terms yield new FOL expressions formal parameter variables bound specified terms . process known λ - reduction , consistsλ - reduction simple textual replacement λ variables removal λ . following expressions illustrate application λ - expression constant , followed result performing λ - reduction expression : λx . P ( x ) ( ) ( 16.30 ) P ( ) important useful variation technique λ - expression body another following expression : λx . λy . Near ( x , y ) ( 16.31 ) fairly abstract expression glossed state something near something else . following expressions illustrate single λ - application sub - sequent reduction kind embedded λ - expression : λx . λy . Near ( x , y ) ( Bacaro ) ( 16.32 ) λy . Near ( Bacaro , y ) important point resulting expression still λ - expression ; first reduction bound variable x removed outer λ , thus revealing inner expression . might expected , resulting λ - expression , turn , applied another term arrive fully specified logical formula , following : λy . Near ( Bacaro , y ) ( Centro ) ( 16.33 ) Near ( Bacaro , Centro ) general technique , called currying1 ( Schönfinkel , 1924 ) way convertingcurrying predicate multiple arguments sequence single-argument predicates . show Chapter 17 , λ - notation provides way incrementally gather arguments predicate appear together daughters predicate parse tree . 16.3.4 Semantics First-Order Logic various objects , properties , relations represented FOL knowledge base acquire meanings virtue correspondence objects , properties , 1 Currying standard term , although Heim Kratzer ( 1998 ) present interesting argument term Schönkfinkelization currying , Curry later built Schönfinkel’s work . 12 CHAPTER 16 • LOGICAL REPRESENTATIONS SENTENCE MEANING relations external world modeled . accomplish em - ploying model-theoretic approach introduced Section 16.2 . Recall approach employs simple set-theoretic notions provide truth-conditional map - ping expressions meaning representation state affairs modeled . apply approach FOL going elements Fig . 16.3 page 7 specifying accounted . start asserting objects world , FOL terms , denote ele - ments domain , asserting atomic formulas captured sets domain elements properties , sets tuples elements relations . example , consider following : ( 16.34 ) Centro near Bacaro . Capturing meaning example FOL involves identifying Terms Predicates correspond various grammatical elements sentence creating logical formulas capture relations implied words syntax sentence . example , effort might yield something like following : Near ( Centro , Bacaro ) ( 16.35 ) meaning logical formula based domain elements de - noted terms Centro Bacaro contained among tuples denoted relation denoted predicate Near current model . interpretation formulas involving logical connectives based meanings components formulas combined meanings connectives contain . Figure 16.4 gives interpretations logical operators shown Fig . 16.3 . P Q ¬ P P ∧ Q P ∨ Q P = ⇒ Q False False True False False True False True True False True True True False False False True False True True False True True True Figure 16.4 Truth table giving semantics various logical connectives . semantics ∧ ( ) ¬ ( ) operators fairly straightforward , correlated least senses corresponding English terms . , worth pointing ∨ ( ) operator disjunctive same way corresponding English word , = ⇒ ( - plies ) operator loosely based common-sense notions implication causation . final bit need address involves variables quantifiers . Recall variables set-based models , elements domain relations hold among . provide model-based account formulas variables employing notion substitution introduced earlier page 9 . Formulas involving ∃ true substitution terms variables results formula true model . Formulas involving ∀ true possible substitutions . 16.3.5 Inference meaning representation language support inference add valid new propo - sitions knowledge base determine truth propositions explicitly 16.3 • FIRST-ORDER LOGIC 13 contained knowledge base ( Section 16.1 ) . section briefly discusses modus ponens , widely implemented inference method provided FOL . Modus ponens form inference corresponds informallyModus ponens known if-then reasoning . abstractly define modus ponens follows , α β taken FOL formulas : α α = ⇒ β β ( 16.36 ) schema like indicates formula below line inferred formulas line form inference . Modus ponens states left-hand side implication rule true , right-hand side rule inferred . following discussions , refer left-hand side implication antecedent right-hand side consequent . typical modus ponens , consider following example , rule last section : VegetarianRestaurant ( Leaf ) ∀ xVegetarianRestaurant ( x ) = ⇒ Serves ( x , VegetarianFood ) Serves ( Leaf , VegetarianFood ) ( 16.37 ) , formula VegetarianRestaurant ( Leaf ) matches antecedent rule , thus allowing modus ponens conclude Serves ( Leaf , VegetarianFood ) . Modus ponens put practical two ways : forward chaining backward chaining . forward chaining systems , modus ponens inforwardchaining precisely manner just described . individual facts added knowledge base , modus ponens fire applicable implication rules . kind arrangement , soon new fact added knowledge base , applicable implication rules found applied , resulting addition new facts knowledge base . new propositions turn fire implication rules applicable . process continues further facts deduced . forward chaining approach advantage facts present knowledge base needed , , sense inference performed advance . substantially reduce time needed answer subsequent queries amount simple lookups . disadvantage approach facts never needed inferred stored . backward chaining , modus ponens run reverse prove specific propo-backwardchaining sitions called queries . first step query formula true determin - ing present knowledge base . , next step search applicable implication rules present knowledge base . applicable rule whereby consequent rule matches query formula . rules , query proved antecedent shown true . performed recursively backward chaining antecedent new query . Prolog programming language backward chaining system implements strategy . works , assume asked verify truth proposition Serves ( Leaf , VegetarianFood ) , assuming facts line ( 16.37 ) . proposition present knowledge base , search applicable rule initiated resulting rule . substituting 14 CHAPTER 16 • LOGICAL REPRESENTATIONS SENTENCE MEANING constant Leaf variable x , next task prove antecedent rule , VegetarianRestaurant ( Leaf ) , , course , facts . Note critical distinguish reasoning backward chaining queries known facts reasoning backwards known consequents unknown antecedents . specific , reasoning backwards mean consequent rule known true , assume antecedent well . example , assume know Serves ( Leaf , VegetarianFood ) true . fact matches consequent rule , might reason backwards conclusion VegetarianRestaurant ( Leaf ) . backward chaining sound method reasoning , reasoning backwards invalid , though frequently useful , form plausible reasoning . Plausible rea - soning consequents antecedents known abduction , show inabduction Chapter 23 , often useful accounting many inferences people make analyzing extended discourses . forward backward reasoning sound , neither complete . Thiscomplete means valid inferences found systems methods alone . Fortunately , alternative inference technique called reso - lution sound complete . Unfortunately , inference systems based res-resolution olution far computationally expensive forward backward chaining systems . practice , , systems form chaining place burden knowledge-base developers encode knowledge fashion permits necessary inferences drawn . 16.4 Event State Representations semantics wish capture consists representations states events . States conditions , properties , remain unchanged extended period time , events denote changes state affairs . representation states events involve host participants , props , times locations . representations events states thus far con - sisted single predicates many arguments needed incorporate roles associated example . example , representation Leaf serves vegetarian fare consists single predicate arguments entity serving thing served . Serves ( Leaf , VegetarianFare ) ( 16.38 ) approach assumes predicate represent event verb same number arguments present verb’s syntactic subcategorization frame . Unfortunately , clearly always case . Consider following examples verb eat : ( 16.39 ) ate . ( 16.40 ) ate turkey sandwich . ( 16.41 ) ate turkey sandwich desk . ( 16.42 ) ate desk . ( 16.43 ) ate lunch . ( 16.44 ) ate turkey sandwich lunch . 16.4 • EVENT STATE REPRESENTATIONS 15 ( 16.45 ) ate turkey sandwich lunch desk . Clearly , choosing correct number arguments predicate represent - ing meaning eat tricky problem . examples introduce five distinct arguments , roles , array different syntactic forms , locations , combina - tions . Unfortunately , predicates FOL fixed arity – take fixed numberarity arguments . address problem , introduce notion event variable allowevent variable make assertions particular events . , refactor event predicates existentially quantified variable first , , argu - ment . event variable , introduce additional predicates represent information event . predicates take event vari - able first argument related FOL terms second argument . following formula illustrates scheme meaning representation 16.40 earlier discussion . ∃ e Eating ( e ) ∧ Eater ( e , Speaker ) ∧ Eaten ( e , TurkeySandwich ) , quantified variable e stands eating event bind event predicate core information provided via named roles Eater Eaten . handle complex examples , simply add additional relations capture provided information , following 16.45 . ∃ e Eating ( e ) ∧ Eater ( e , Speaker ) ∧ Eaten ( e , TurkeySandwich ) ( 16.46 ) ∧ Meal ( e , Lunch ) ∧ Location ( e , Desk ) Event representations sort referred neo-Davidsonian event rep-neo-Davidsonian resentations ( Davidson 1967 , Parsons 1990 ) philosopher Donald Davidson introduced notion event variable ( Davidson , 1967 ) . summarize , neo-Davidsonian approach event representations : • Events captured predicates take single event variable argument . • need specify fixed number arguments FOL predicate ; rather , many roles fillers glued provided input . • roles postulated mentioned input . • logical connections among closely related inputs share same pred - icate satisfied need additional inference . approach still leaves problem determining set predi - cates needed represent roles associated specific events like Eater Eaten , well general concepts like Location Time . return prob - lem detail Chapter 20 . 16.4.1 Representing Time discussion events , seriously address issue capturing time represented events supposed occurred . representation information useful form domain temporal logic . dis-temporal logic cussion introduces basic concerns temporal logic briefly discusses means human languages convey temporal information , , among things , includes tense logic , ways verb tenses convey temporal infor-tense logic 16 CHAPTER 16 • LOGICAL REPRESENTATIONS SENTENCE MEANING mation . detailed discussion robust approaches representation analysis temporal expressions presented Chapter 18 . straightforward theory time holds flows inexorably forward events associated points intervals time , timeline . order distinct events situating timeline ; event precedes another flow time leads first event second . Accompanying notions theories idea current moment time . Combin - ing notion idea temporal ordering relationship yields familiar notions past , present , future . Many schemes represent kind temporal information . pre - sented fairly simple stays FOL framework reified events pursuing . Consider following examples : ( 16.47 ) arrived New York . ( 16.48 ) arriving New York . ( 16.49 ) arrive New York . sentences refer same kind event differ solely tense verb . current scheme representing events , three share following kind representation , lacks temporal information : ∃ eArriving ( e ) ∧ Arriver ( e , Speaker ) ∧ Destination ( e , NewYork ) ( 16.50 ) temporal information provided tense verbs exploited predicating additional information event variable e . Specifically , add temporal variables representing interval corresponding event , end point event , temporal predicates relating end point current time indicated tense verb . approach yields following representations arriving examples : ∃ e , , n Arriving ( e ) ∧ Arriver ( e , Speaker ) ∧ Destination ( e , NewYork ) ∧ IntervalOf ( e , ) ∧ EndPoint ( , n ) ∧ Precedes ( n , ) ∃ e , , n Arriving ( e ) ∧ Arriver ( e , Speaker ) ∧ Destination ( e , NewYork ) ∧ IntervalOf ( e , ) ∧ MemberOf ( , ) ∃ e , , n Arriving ( e ) ∧ Arriver ( e , Speaker ) ∧ Destination ( e , NewYork ) ∧ IntervalOf ( e , ) ∧ EndPoint ( , n ) ∧ Precedes ( , n ) representation introduces variable stand interval time - sociated event variable stands end interval . two-place predicate Precedes represents notion first time-point argument precedes second time ; constant refers current time . past events , end point interval precede current time . Similarly , fu - ture events current time precede end event . events happening present , current time contained event interval . Unfortunately , relation simple verb tenses points time means straightforward . Consider following examples : ( 16.51 ) Ok , fly San Francisco Boston 10 . ( 16.52 ) Flight 1390 gate hour . first example , present tense verb fly refer future event , second future tense refer past event . complications occur consider verb tenses . Con - sider following examples : 16.4 • EVENT STATE REPRESENTATIONS 17 ( 16.53 ) Flight 1902 arrived late . ( 16.54 ) Flight 1902 arrived late . Although refer events past , representing same way seems wrong . second example seems another unnamed event lurking background ( e.g . , Flight 1902 already arrived late something else hap - pened ) . account phenomena , Reichenbach ( 1947 ) introduced notion reference point . simple temporal scheme , current moment timereference point equated time utterance reference point event occurred ( , , ) . Reichenbach’s approach , notion reference point separated utterance time event time . following examples illustrate basics approach : ( 16.55 ) Mary’s flight departed , ate lunch . ( 16.56 ) Mary’s flight departed , eaten lunch . examples , eating event happened past , , prior utterance . , verb tense first example indicates eating event began flight departed , second example indicates eating accomplished prior flight’s departure . , Reichenbach’s terms departure event specifies reference point . facts accom - modated additional constraints relating eating departure events . first example , reference point precedes eating event , second exam - ple , eating precedes reference point . Figure 16.5 illustrates Reichenbach’s approach primary English tenses . Exercise 16.6 asks represent examples FOL . Past Perfect Simple Past Present Perfect Simple Future Future PerfectPresent E E E E R R U R , E U R , U U , R , E U , R U Figure 16.5 Reichenbach’s approach applied various English tenses . diagrams , time flows left right , E denotes time event , R denotes reference time , U denotes time utterance . discussion focused narrowly broad notions past , present , future signaled various English verb tenses . course , lan - guages many ways convey temporal information , including temporal expressions : ( 16.57 ) like go 6:45 morning . ( 16.58 ) Somewhere around noon , please . 18 CHAPTER 16 • LOGICAL REPRESENTATIONS SENTENCE MEANING show Chapter 18 , grammars temporal expressions consid - erable practical importance information extraction question-answering appli - cations . Finally , note systematic conceptual organization reflected examples like . particular , temporal expressions English frequently expressed spatial terms , illustrated various , , somewhere , near examples ( Lakoff Johnson 1980 , Jackendoff 1983 ) . Metaphor - ical organizations , domain systematically expressed terms another , common languages world . 16.4.2 Aspect last section , discussed ways represent time event respect time utterance describing . section , address notion aspect , concerns cluster related topics , including event hasaspect ended ongoing , conceptualized happening point time interval , particular state world comes - cause . Based related notions , event expressions traditionally divided four general classes illustrated following examples : Stative : know departure gate . Activity : John flying . Accomplishment : Sally booked flight . Achievement : found gate . Although earliest versions classification discussed Aristotle , presented due Vendler ( 1967 ) . Stative expressions represent notion event participant partic-stative ular property , state , point time . , expressions thought capturing aspect world single point time . Consider following ATIS examples . ( 16.59 ) like Flight 840 arriving 10:06 . ( 16.60 ) need cheapest fare . ( 16.61 ) go first class . examples like , event participant denoted subject seen experiencing something specific point time . experiencer same state earlier future left unspecified . Activity expressions describe events undertaken participant noactivity particular end point . Unlike statives , activities seen occurring span time associated single points time . Consider following examples : ( 16.62 ) drove Mazda . ( 16.63 ) live Brooklyn . examples specify subject engaged , engaged , activity specified verb period time . final aspectual class , achievement expressions , similar accomplish-achievementexpressions ments expressions result state . Consider following : ( 16.64 ) found gate . ( 16.65 ) reached New York . 16.5 • DESCRIPTION LOGICS 19 Unlike accomplishments , achievement events thought happening - stant equated particular activity leading up state . specific , events examples preceded extended searching traveling events , events corresponding directly found reach conceived points , intervals . Note accomplishments achievements events result state , sometimes characterized subtypes single aspectual class . Members combined class known telic eventualities . teliceventualities 16.5 Description Logics noted beginning chapter , fair number representational schemes invented capture meaning linguistic utterances . widely accepted meanings represented various approaches , principle , translated equivalent statements FOL relative ease . difficulty many approaches semantics statement defined procedurally . , meaning arises whatever system interprets . Description logics effort better specify semantics earlier structured network representations provide conceptual framework especially well suited certain kinds domain modeling . Formally , term De - scription Logics refers family logical approaches correspond varying subsets FOL . restrictions placed expressiveness Description Logics serve guarantee tractability various critical kinds inference . focus , , modeling aspects DLs rather computational complexity issues . Description Logics model application domain , emphasis representation knowledge categories , individuals belong categories , relationships hold among individuals . set categories , concepts , make up particular application domain called terminology . portion knowledge base contains terminology isterminology traditionally called TBox ; contrast ABox contains facts aboutTBox ABox individuals . terminology typically arranged hierarchical organization called ontology captures subset / superset relations among categories . ontology Returning earlier culinary domain , represented domain concepts - ing unary predicates Restaurant ( x ) ; DL equivalent omits variable , restaurant category simply written Restaurant . 2 capture fact particular domain element , Frasca , restaurant , assert Restau - rant ( Frasca ) same way FOL . semantics categories specified precisely same way introduced earlier Section 16.2 : category like Restaurant simply denotes set domain elements restaurants . Once specified categories interest particular domain , next step arrange hierarchical structure . two ways cap - ture hierarchical relationships present terminology : directly assert relations categories related hierarchically , provide com - plete definitions concepts rely inference provide hierarchical 2 DL statements conventionally typeset sans serif font . follow convention , reverting standard mathematical notation giving FOL equivalents DL statements . 20 CHAPTER 16 • LOGICAL REPRESENTATIONS SENTENCE MEANING relationships . choice methods hinges re - sulting categories put feasibility formulating precise definitions many naturally occurring categories . discuss first option return notion definitions later section . directly specify hierarchical structure , assert subsumption relationssubsumption appropriate concepts terminology . subsumption relation conventionally written C v D read C subsumed D ; , members category C members category D . surprisingly , formal semantics relation provided simple set relation ; domain element set denoted C set denoted D . Adding following statements TBox asserts restaurants com - mercial establishments , moreover , various subtypes restaurants . Restaurant v CommercialEstablishment ( 16.66 ) ItalianRestaurant v Restaurant ( 16.67 ) ChineseRestaurant v Restaurant ( 16.68 ) MexicanRestaurant v Restaurant ( 16.69 ) Ontologies conventionally illustrated diagrams shown Fig . 16.6 , subsumption relations denoted links nodes representing categories . Restaurant Chinese Restaurant Mexican Restaurant Italian Restaurant Commercial Establishment Figure 16.6 graphical network representation set subsumption relations restaurant domain . Note , precisely vague nature semantic network diagrams like motivated development Description Logics . example , diagram tell set categories exhaustive disjoint . , tell kinds restaurants dealing domain might others . tell individual restaurant fall categories , possible , example , restaurant Italian Chinese . DL statements transparent meaning ; simply assert set subsumption relations categories make claims coverage mutual exclusion . application requires coverage disjointness information , - formation made explicitly . simplest ways capture kind - formation negation disjunction operators . example , following assertion tell Chinese restaurants Italian restaurants . ChineseRestaurantv ItalianRestaurant ( 16.70 ) 16.5 • DESCRIPTION LOGICS 21 Specifying set subconcepts covers category achieved disjunc - tion , following : Restaurantv ( 16.71 ) ( ItalianRestaurant ChineseRestaurant MexicanRestaurant ) hierarchy Fig . 16.6 tells next nothing concepts . certainly know anything makes restaurant restaurant , less Italian , Chinese , expensive . needed additional assertions means member categories . Description Logics statements come form relations concepts described concepts domain . keeping origins structured network representations , relations Description Logics typically binary often referred roles , role-relations . relations work , consider facts restaurants discussed earlier chapter . hasCuisine relation capture infor - mation kinds food restaurants serve hasPriceRange relation capture pricey particular restaurants tend . relations say something concrete various classes restaurants . start ItalianRestaurant concept . first approximation , might say - thing uncontroversial like Italian restaurants serve Italian cuisine . capture notions , first add new concepts terminology represent various kinds cuisine . MexicanCuisine v Cuisine ItalianCuisine v Cuisine ChineseCuisine v Cuisine VegetarianCuisine v Cuisine ExpensiveRestaurant v Restaurant ModerateRestaurant v Restaurant CheapRestaurant v Restaurant Next , revise earlier version ItalianRestaurant capture cuisine infor - mation . ItalianRestaurant v Restaurantu ∃ hasCuisine . ItalianCuisine ( 16.72 ) correct way read expression individuals category Italian - Restaurant subsumed category Restaurant unnamed class defined existential clause — set entities serve Italian cuisine . equivalent statement FOL ∀ xItalianRestaurant ( x ) → Restaurant ( x ) ( 16.73 ) ∧ ( ∃ yServes ( x , y ) ∧ ItalianCuisine ( y ) ) FOL translation make clear DL assertions entail . particular , say domain entities classified Ital - ian restaurants engage relations like expensive even serving Chinese cuisine . critically , say domain entities know serve Italian cuisine . fact , inspection FOL translation makes clear infer new entities belong category based characteristics . best infer new facts restaurants explicitly told members category . 22 CHAPTER 16 • LOGICAL REPRESENTATIONS SENTENCE MEANING course , inferring category membership individuals certain char - acteristics common critical reasoning task need support . brings back alternative approach creating hierarchical structures terminology : actually providing definition categories creating form necessary sufficient conditions category membership . case , might explicitly provide definition ItalianRestaurant restau - rants serve Italian cuisine , ModerateRestaurant whose price range moderate . ItalianRestaurant ≡ Restaurantu ∃ hasCuisine . ItalianCuisine ( 16.74 ) ModerateRestaurant ≡ RestaurantuhasPriceRange . ModeratePrices ( 16.75 ) earlier statements provided necessary conditions membership categories , statements provide necessary sufficient conditions . Finally , consider superficially similar case vegetarian restaurants . Clearly , vegetarian restaurants serve vegetarian cuisine . merely serve vegetarian fare , that’s serve . accommodate kind constraint adding additional restriction form universal quantifier earlier description VegetarianRestaurants , follows : VegetarianRestaurant ≡ Restaurant ( 16.76 ) u ∃ hasCuisine . VegetarianCuisine u ∀ hasCuisine . VegetarianCuisine Inference Paralleling focus Description Logics categories , relations , individuals processing focus restricted subset logical inference . Rather employ - ing full range reasoning permitted FOL , DL reasoning systems emphasize closely coupled problems subsumption instance checking . Subsumption , form inference , task determining , based thesubsumption facts asserted terminology , superset / subset relationship exists two concepts . Correspondingly , instance checking asks individual ainstancechecking member particular category facts know individual terminology . inference mechanisms underlying subsumption - stance checking go beyond simply checking explicitly stated subsumption rela - tions terminology . explicitly reason relational information asserted terminology infer appropriate subsumption membership relations . Returning restaurant domain , add new kind restaurant following statement : IlFornaiovModerateRestaurantu ∃ hasCuisine . ItalianCuisine ( 16.77 ) assertion , might ask IlFornaio chain restaurants might classified Italian restaurant vegetarian restaurant . precisely , pose following questions reasoning system : IlFornaio v ItalianRestaurant ( 16.78 ) IlFornaio v VegetarianRestaurant ( 16.79 ) answer first question positive IlFornaio meets criteria specified category ItalianRestaurant : Restaurant explicitly 16.5 • DESCRIPTION LOGICS 23 Restaurant Chinese Restaurant Mexican Restaurant Italian Restaurant Expensive Restaurant Cheap Restaurant Moderate Restaurant Il Fornaio Vegetarian Restaurant Figure 16.7 graphical network representation complete set subsumption rela - tions restaurant domain current set assertions TBox . classified ModerateRestaurant , subtype Restaurant , meets . Cuisine class restriction asserted directly . answer second question negative . Recall , criteria veg - etarian restaurants contains two requirements : serve vegetarian fare , that’s serve . current definition IlFornaio fails counts asserted relations state IlFornaio serves vegetarian fare , relation asserted , hasCuisine . ItalianCuisine , contradicts sec - ond criteria . related reasoning task , based basic subsumption inference , derive implied hierarchy terminology facts categories ter-impliedhierarchy minology . task roughly corresponds repeated application subsump - tion operator pairs concepts terminology . current collection statements , expanded hierarchy shown Fig . 16.7 inferred . convince yourself diagram contains subsumption links present current knowledge . Instance checking task determining particular individual classified member particular category . process takes known individual , form relations explicit categorical statements , compares information known current terminol - ogy . returns list specific categories individual belong . example categorization problem , consider establishment told restaurant serves Italian cuisine . Restaurant ( Gondolier ) hasCuisine ( Gondolier , ItalianCuisine ) , told entity denoted term Gondolier restau - rant serves Italian food . new information contents current TBox , might reasonably like ask Italian restaurant , vegetarian restaurant , moderate prices . Assuming definitional statements earlier , indeed categorize Gondolier Italian restaurant . , information meets necessary sufficient conditions required membership category . IlFornaio category , individual fails match stated criteria VegetarianRestaurant . Finally , Gondolier might 24 CHAPTER 16 • LOGICAL REPRESENTATIONS SENTENCE MEANING turn moderately priced restaurant , tell point know anything prices . means current knowledge answer query ModerateRestaurant ( Gondolier ) false lacks required hasPriceRange relation . implementation subsumption , instance checking , well kinds inferences needed practical applications , varies according expressivity Description Logic . , Description Logic even modest power , primary implementation techniques based satisfiability methods turn rely underlying model-based semantics introduced earlier chapter . OWL Semantic Web highest-profile role Description Logics , date , part development Semantic Web . Semantic Web ongoing effort pro - vide way formally specify semantics contents Web ( Fensel et al . , 2003 ) . key component effort involves creation deployment ontologies various application areas interest . meaning representation language represent knowledge Web Ontology Language ( OWL ) Web OntologyLanguage ( McGuiness van Harmelen , 2004 ) . OWL embodies Description Logic corresponds roughly describing . 16.6 Summary chapter introduced representational approach meaning . follow - ing highlights chapter : • major approach meaning computational linguistics involves cre - ation formal meaning representations capture meaning-related content linguistic inputs . representations intended bridge gap language common-sense knowledge world . • frameworks specify syntax semantics representa - tions called meaning representation languages . wide variety languages natural language processing artificial intelligence . • representations need able support practical computational requirements semantic processing . Among need determine truth propositions , support unambiguous representations , rep - resent variables , support inference , sufficiently expressive . • Human languages wide variety features convey meaning . Among important ability convey predicate - argument structure . • First-Order Logic well-understood , computationally tractable meaning representation language offers needed meaning rep - resentation language . • Important elements semantic representation including states events captured FOL . • Semantic networks frames captured FOL framework . • Modern Description Logics consist useful computationally tractable subsets full First-Order Logic . prominent description BIBLIOGRAPHICAL HISTORICAL NOTES 25 logic Web Ontology Language ( OWL ) , specification Semantic Web . Bibliographical Historical Notes earliest computational declarative meaning representations natural lan - guage processing context question-answering systems ( Green et al . 1961 , Raphael 1968 , Lindsey 1963 ) . systems employed ad hoc representations facts needed answer questions . Questions translated form matched against facts knowledge base . Simmons ( 1965 ) provides overview early efforts . Woods ( 1967 ) investigated FOL-like representations question - swering replacement ad hoc representations time . Woods ( 1973 ) further developed extended ideas landmark Lunar system . Interestingly , representations Lunar truth-conditional pro - cedural semantics . Winograd ( 1972 ) employed similar representation based Micro-Planner language SHRDLU system . same period , researchers interested cognitive modeling lan - guage memory working various forms associative network representations . Masterman ( 1957 ) first make computational semantic network-like knowledge representation , although semantic networks generally credited Quillian ( 1968 ) . considerable amount work seman - tic network framework carried era ( Norman Rumelhart 1975 , Schank 1972 , Wilks 1975b , Wilks 1975a , Kintsch 1974 ) . period number researchers began incorporate Fillmore’s notion case roles ( Fillmore , 1968 ) representations . Simmons ( 1973 ) earliest adopter case roles part representations natural language processing . Detailed analyses Woods ( 1975 ) Brachman ( 1979 ) aimed figuring semantic networks actually mean led development number sophisticated network-like languages including KRL ( Bobrow Winograd , 1977 ) KL-ONE ( Brachman Schmolze , 1985 ) . frameworks became sophisticated well defined , became clear restricted variants FOL coupled specialized indexing inference procedures . useful collection papers covering work found Brachman Levesque ( 1985 ) . Russell Norvig ( 2002 ) describe modern perspective representational efforts . Linguistic efforts assign semantic structures natural language sentences generative era began work Katz Fodor ( 1963 ) . limitations simple feature-based representations natural fit logic many linguistic problems day quickly led adoption variety predicate-argument structures preferred semantic representations ( Lakoff 1972 , McCawley 1968 ) . subsequent introduction Montague ( 1973 ) truth - conditional model-theoretic framework linguistic theory led tighter integration theories formal syntax wide range formal semantic frameworks . Good introductions Montague semantics role linguistic theory found Dowty et al . ( 1981 ) Partee ( 1976 ) . representation events reified objects due Davidson ( 1967 ) . approach presented , explicitly reifies event participants , due Parsons 26 CHAPTER 16 • LOGICAL REPRESENTATIONS SENTENCE MEANING ( 1990 ) . current computational approaches temporal reasoning based Allen’s notion temporal intervals ( Allen , 1984 ) ; Chapter 18 . ter Meulen ( 1995 ) provides modern treatment tense aspect . Davis ( 1990 ) describes FOL represent knowledge wide range common-sense domains including quantities , space , time , beliefs . recent comprehensive treatment logic language found van Benthem ter Meulen ( 1997 ) . classic semantics text Lyons ( 1977 ) . McCaw - ley ( 1993 ) indispensable textbook covering wide range topics concerning logic language . Chierchia McConnell-Ginet ( 1991 ) broadly covers semantic issues linguistic perspective . Heim Kratzer ( 1998 ) recent text written perspective current generative theory . Exercises 16.1 Peruse daily newspaper three examples ambiguous sentences headlines . Describe various sources ambiguities . 16.2 Consider domain word coffee refer following con - cepts knowledge-based system : caffeinated decaffeinated beverage , ground coffee make kind beverage , beans themselves . Give arguments following coffee ambiguous vague . 1 . coffee today . 2 . Buy coffee way home . 3 . Please grind coffee . 16.3 following rule , gave translation Example 16.25 , reasonable definition means vegetarian restaurant . ∀ xVegetarianRestaurant ( x ) = ⇒ Serves ( x , VegetarianFood ) Give FOL rule better defines vegetarian restaurants terms serve . 16.4 Give FOL translations following sentences : 1 . Vegetarians eat meat . 2 . vegetarians eat eggs . 16.5 Give set facts inferences necessary prove following assertions : 1 . McDonald’s vegetarian restaurant . 2 . vegetarians eat McDonald’s . just place facts knowledge base . Show inferred general facts vegetarians McDonald’s . 16.6 following sentences , give FOL translations capture temporal relationships events . 1 . Mary’s flight departed , ate lunch . 2 . Mary’s flight departed , eaten lunch . 16.7 page 12 , gave representation Near ( Centro , Bacaro ) transla - tion sentence Centro near Bacaro . truth-conditional semantics , formula true false model . Critique truth - conditional approach respect meaning words like near . Exercises 27 Allen , J . ( 1984 ) . general theory action time . Artificial Intelligence , 23 ( 2 ) , 123 – 154 . Banarescu , L . , Bonial , C . , Cai , S . , Georgescu , M . , Griffitt , K . , Hermjakob , U . , Knight , K . , Koehn , P . , Palmer , M . , Schneider , N . ( 2013 ) . Abstract meaning representation sembanking . Proceedings 7th Linguistic Annota - tion Workshop Interoperability Discourse , 178 – 186 . Bobrow , D . G . Winograd , T . ( 1977 ) . overview KRL , knowledge representation language . Cognitive Sci - ence , 1 ( 1 ) , 3 – 46 . Brachman , R . J . ( 1979 ) . epistemogical status se - mantic networks . Findler , N . V . ( Ed . ) , Associative Net - works : Representation Knowledge Comput - ers , 3 – 50 . Academic Press . Brachman , R . J . Levesque , H . J . ( Eds . ) . ( 1985 ) . Read - ings Knowledge Representation . Morgan Kaufmann . Brachman , R . J . Schmolze , J . G . ( 1985 ) . overview KL-ONE knowledge representation system . Cognitive Science , 9 ( 2 ) , 171 – 216 . Chierchia , G . McConnell-Ginet , S . ( 1991 ) . Meaning Grammar . MIT Press . Church , . ( 1940 ) . formulation simple theory types . Journal Symbolic Logic , 5 , 56 – 68 . Davidson , D . ( 1967 ) . logical form action sentences . Rescher , N . ( Ed . ) , Logic Decision Action . University Pittsburgh Press . Davis , E . ( 1990 ) . Representations Commonsense Knowl - edge . Morgan Kaufmann . Dowty , D . R . , Wall , R . E . , Peters , S . ( 1981 ) . Introduction Montague Semantics . D . Reidel . Fensel , D . , Hendler , J . . , Lieberman , H . , Wahlster , W . ( Eds . ) . ( 2003 ) . Spinning Semantic Web : Bring World Wide Web Full Potential . MIT Press , Cam - bridge , MA . Fillmore , C . J . ( 1968 ) . case case . Bach , E . W . Harms , R . T . ( Eds . ) , Universals Linguistic Theory , 1 – 88 . Holt , Rinehart & Winston . Green , B . F . , Wolf , . K . , Chomsky , C . , Laughery , K . ( 1961 ) . Baseball : automatic question answerer . Proceedings Western Joint Computer Conference 19 , 219 – 224 . Reprinted Grosz et al . ( 1986 ) . Heim , . Kratzer , . ( 1998 ) . Semantics Generative Grammar . Blackwell Publishers , Malden , MA . Jackendoff , R . ( 1983 ) . Semantics Cognition . MIT Press . Katz , J . J . Fodor , J . . ( 1963 ) . structure seman - tic theory . Language , 39 , 170 – 210 . Kintsch , W . ( 1974 ) . Representation Meaning Mem - ory . Wiley , New York . Lakoff , G . ( 1972 ) . Linguistics natural logic . David - son , D . Harman , G . ( Eds . ) , Semantics Natural Lan - guage , 545 – 665 . D . Reidel . Lakoff , G . Johnson , M . ( 1980 ) . Metaphors Live . University Chicago Press , Chicago , IL . Lindsey , R . ( 1963 ) . Inferential memory basis ma - chines understand natural language . Feigenbaum , E . Feldman , J . ( Eds . ) , Computers Thought , 217 – 233 . McGraw Hill . Lyons , J . ( 1977 ) . Semantics . Cambridge University Press . Masterman , M . ( 1957 ) . thesaurus syntax seman - tics . Mechanical Translation , 4 ( 1 ) , 1 – 2 . McCawley , J . D . ( 1968 ) . role semantics gram - mar . Bach , E . W . Harms , R . T . ( Eds . ) , Universals Linguistic Theory , 124 – 169 . Holt , Rinehart & Winston . McCawley , J . D . ( 1993 ) . Everything Linguists Al - ways Wanted Know Logic ( 2nd Ed . ) . University Chicago Press , Chicago , IL . McGuiness , D . L . van Harmelen , F . ( 2004 ) . OWL web ontology overview . Tech . rep . 20040210 , World Wide Web Consortium . Montague , R . ( 1973 ) . proper treatment quantification ordinary English . Thomason , R . ( Ed . ) , Formal Phi - losophy : Selected Papers Richard Montague , 247 – 270 . Yale University Press , New Haven , CT . Norman , D . . Rumelhart , D . E . ( 1975 ) . Explorations Cognition . Freeman . Parsons , T . ( 1990 ) . Events Semantics English . MIT Press . Partee , B . H . ( Ed . ) . ( 1976 ) . Montague Grammar . Academic Press . Quillian , M . R . ( 1968 ) . Semantic memory . Minsky , M . ( Ed . ) , Semantic Information Processing , 227 – 270 . MIT Press . Raphael , B . ( 1968 ) . SIR : computer program seman - tic information retrieval . Minsky , M . ( Ed . ) , Semantic Information Processing , 33 – 145 . MIT Press . Reichenbach , H . ( 1947 ) . Elements Symbolic Logic . Macmillan , New York . Russell , S . Norvig , P . ( 2002 ) . Artificial Intelligence : Modern Approach ( 2nd Ed . ) . Prentice Hall . Schank , R . C . ( 1972 ) . Conceptual dependency : theory natural language processing . Cognitive Psychology , 3 , 552 – 631 . Schönfinkel , M . ( 1924 ) . Über die Bausteine der mathematis - chen Logik . Mathematische Annalen , 92 , 305 – 316 . English translation appears Frege Gödel : Source Book Mathematical Logic , Harvard University Press , 1967 . Simmons , R . F . ( 1965 ) . Answering English questions computer : survey . CACM , 8 ( 1 ) , 53 – 70 . Simmons , R . F . ( 1973 ) . Semantic networks : com - putation understanding English sentences . Schank , R . C . Colby , K . M . ( Eds . ) , Computer Models Thought Language , 61 – 113 . W.H . Freeman Co . ter Meulen , . ( 1995 ) . Representing Time Natural Lan - guage . MIT Press . van Benthem , J . ter Meulen , . ( Eds . ) . ( 1997 ) . Hand - book Logic Language . MIT Press . Vendler , Z . ( 1967 ) . Linguistics Philosophy . Cornell Uni - versity Press , Ithaca , NY . Wilks , Y . ( 1975a ) . Preference semantics . Keenan , E . L . ( Ed . ) , Formal Semantics Natural Language , 329 – 350 . Cambridge Univ . Press . Wilks , Y . ( 1975b ) . preferential , pattern-seeking , semantics natural language inference . Artificial Intelligence , 6 ( 1 ) , 53 – 74 . Winograd , T . ( 1972 ) . Understanding Natural Language . Academic Press . 28 Chapter 16 • Logical Representations Sentence Meaning Woods , W . . ( 1967 ) . Semantics Question-Answering System . Ph . D . thesis , Harvard University . Woods , W . . ( 1973 ) . Progress natural language - standing . Proceedings AFIPS National Conference , 441 – 450 . Woods , W . . ( 1975 ) . link : Foundations semantic networks . Bobrow , D . G . Collins , . M . ( Eds . ) , Representation Understanding : Studies Cog - nitive Science , 35 – 82 . Academic Press .